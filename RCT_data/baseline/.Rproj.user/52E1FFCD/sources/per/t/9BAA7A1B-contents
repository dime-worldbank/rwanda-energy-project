##############
#Author: Xiaoming Zhang
#Date: 7.30.2024
#Purpose: Randomization primary construction
#############

pacman::p_load(knitr, tidyverse, dplyr, here, sf, ggplot2, readxl, writexl, janitor, randomizr, RCT, purrr)

getwd()

#Dropbox----


if (Sys.getenv("USERNAME") == "wb614406"){
  DROPBOX <- file.path("C:/Users/wb614406/Dropbox")
}


data_path <- file.path(
  DROPBOX,
  "Rwanda Energy/EAQIP/datawork/RCT_data",
  "baseline/data/data"
)

scope_path <- file.path(
  DROPBOX,
  "Rwanda Energy/EAQIP/datawork/RCT_data",
  "baseline/data/Updated scope villages& households"
)

output_path <- file.path(
  DROPBOX,
  "Rwanda Energy/EAQIP/datawork/RCT_data",
  "baseline/outputs"
)


#read files----


household_csv <- read.csv("C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/questionnaires/cto attachments/household_head.csv")
household_join <- read_xlsx(path = file.path(scope_path, "household_join_1111.xlsx"))

household_head <- read_xlsx(path = file.path(data_path, "household_head_clean.xlsx"))
scope <-read_xlsx(path = file.path(scope_path, "scope_193_0807.xlsx"))
scope_csv <- read.csv("C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/questionnaires/REP Backcheck survey/cto attachments/scope_villages.csv")

#Select replacement----
household_scope <- household_head %>% 
  filter(villageid_key %in% scope$village_id) 

household_replacement <- household_head_scope %>% 
  anti_join(household_join, by = c("household_id")) 
  
set.seed(1118)  # Ensure reproducibility
household_replacement_rand <- household_replacement %>%
  group_by(villageid_key) %>% 
  mutate(random_order = sample(row_number())) %>% 
  arrange(villageid_key, random_order) %>% 
  ungroup()


write.csv(household_replacement_rand, file.path(scope_path, "household_replacement.csv"))

write_xlsx(household_replacement_rand, path = file.path(scope_path, "household_replacement.xlsx"))

#Read back up and household head

household_select <- read_xlsx(path = file.path(scope_path, "household_select_0807.xlsx"))
household_backup <- read_xlsx(path = file.path(scope_path, "household_backup_0807.xlsx"))  

nrow(household_select) + nrow(household_backup) + nrow(household_head_replacement) == nrow(household_head_scope)


##For survey firm----

unique_lots <- unique(scope$lot)


for (lot in unique_lots) {
  village <- scope %>% 
    filter(lot == !!lot) %>% 
    select(village_id, name, cell, sector, district, province)
  
  village_join <- village %>% 
    select(village_id)
  
  households  <- household_select %>% 
    semi_join(village_join, by = c("villageid_key" = "village_id")) %>% 
    select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
  
  back_up <- household_backup %>% 
    semi_join(village_join, by = c("villageid_key" = "village_id")) %>% 
    select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
  
  replacement <- household_replacement_rand %>% 
    semi_join(village_join, by = c("villageid_key" = "village_id")) %>% 
    select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
  
  list_to_write <- list("village list" = village, "household list" = households, "backup household" = back_up, "replacement_household" = replacement)
  
  file_name <- paste0("Lot_", lot, ".xlsx")
  
  write_xlsx(list_to_write, path = file.path(scope_path, "Survey firm", file_name))
}

