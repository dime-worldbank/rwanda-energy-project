)
table(four_scope_newly$strata)
treatment <- treatment_assign(
data = four_scope_newly,
share_control = 0.25,
share_ti = c(0.25, 0.25, 0.25),
n_t = 3,
strata_varlist = dplyr::vars(lot, median),
missfits = "global",
key = "village_id",
seed = 072901
)
treatment <- as.data.frame(treatment$data) %>%
select(
village_id, treat
)
four_scope_newly <- left_join(four_scope_newly, treatment, by = c("village_id"))
rand_newly_sum <- four_scope_newly %>%
group_by(strata) %>%
summarise(
C = sum(treat == 0),
T1 = sum(treat == 1),
T2 = sum(treat == 2),
T3 = sum(treat == 3),
sum = n()
)
rand_newly_sum <- rand_newly %>%
group_by(strata) %>%
summarise(
C = sum(treat == 0),
T1 = sum(treat == 1),
T2 = sum(treat == 2),
T3 = sum(treat == 3),
sum = n()
)
summarise_row <-rand_newly %>%
summarise(
strata = "Total",
C = sum(rand_newly_sum$C),
T1 = sum(rand_newly_sum$T1),
T2 = sum(rand_newly_sum$T2),
T3 = sum(rand_newly_sum$T3),
sum = sum(rand_newly_sum$sum)
)
rand_newly_sum <- bind_rows(rand_newly_sum, summarise_row)
View(rand_newly_sum)
four_scope_newly <- four_scope_newly %>%
group_by(lot) %>%
arrange(lot, hh_head_06) %>%
mutate(
median_position = ceiling(n() / 2),  # Calculate median position within each group
hh_head_06_order = order(hh_head_06),  # Get the order of hh_head_06 values
median = ifelse(rank(hh_head_06_order) <= median_position, "above", "below")
) %>%
ungroup()
four_scope_newly %>%
group_by(lot) %>%
summarise(
n = n(),
survey = n*20,
vulnerable = sum(hh_head_06)
)
four_scope_newly <- four_scope_newly %>%
mutate(
strata = paste0(lot, "_", median)
)
table(four_scope_newly$strata)
treatment <- treatment_assign(
data = four_scope_newly,
share_control = 0.25,
share_ti = c(0.25, 0.25, 0.25),
n_t = 3,
strata_varlist = dplyr::vars(lot, median),
missfits = "global",
key = "village_id",
seed = 072901
)
treatment <- as.data.frame(treatment$data) %>%
select(
village_id, treat
)
four_scope_newly <- left_join(four_scope_newly, treatment, by = c("village_id"))
rand_newly_sum <- four_scope_newly %>%
group_by(strata) %>%
summarise(
C = sum(treat == 0),
T1 = sum(treat == 1),
T2 = sum(treat == 2),
T3 = sum(treat == 3),
sum = n()
)
four_scope_newly<- four_district %>%
filter(scope_2407 == 1 & status == "newly")
table(four_scope_newly$lot)
#randomization----
four_scope_newly <- four_scope_newly %>%
group_by(lot) %>%
arrange(lot, hh_head_06) %>%
mutate(
median_position = ceiling(n() / 2),  # Calculate median position within each group
hh_head_06_order = order(hh_head_06),  # Get the order of hh_head_06 values
median = ifelse(rank(hh_head_06_order) <= median_position, "above", "below")
) %>%
ungroup()
four_scope_newly %>%
group_by(lot) %>%
summarise(
n = n(),
survey = n*20,
vulnerable = sum(hh_head_06)
)
four_scope_newly <- four_scope_newly %>%
mutate(
strata = paste0(lot, "_", median)
)
table(four_scope_newly$strata)
#misfit global----
treatment <- treatment_assign(
data = four_scope_newly,
share_control = 0.25,
share_ti = c(0.25, 0.25, 0.25),
n_t = 3,
strata_varlist = dplyr::vars(lot, median),
missfits = "global",
key = "village_id",
seed = 072901
)
treatment <- as.data.frame(treatment$data) %>%
select(
village_id, treat
)
four_scope_newly <- left_join(four_scope_newly, treatment, by = c("village_id"))
rand_newly_sum <- four_scope_newly %>%
group_by(strata) %>%
summarise(
C = sum(treat == 0),
T1 = sum(treat == 1),
T2 = sum(treat == 2),
T3 = sum(treat == 3),
sum = n()
)
rand_newly_sum <- rand_newly %>%
group_by(strata) %>%
summarise(
C = sum(treat == 0),
T1 = sum(treat == 1),
T2 = sum(treat == 2),
T3 = sum(treat == 3),
sum = n()
)
summarise_row <-rand_newly %>%
summarise(
strata = "Total",
C = sum(rand_newly_sum$C),
T1 = sum(rand_newly_sum$T1),
T2 = sum(rand_newly_sum$T2),
T3 = sum(rand_newly_sum$T3),
sum = sum(rand_newly_sum$sum)
)
rand_newly_sum <- bind_rows(rand_newly_sum, summarise_row)
View(rand_newly_sum)
table(four_scope_newly$lot)
if (Sys.getenv("USERNAME") == "wb614406"){
DROPBOX <- file.path("C:/Users/wb614406/Dropbox")
}
path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/data/four_district_2402.xlsx"
)
data_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/data"
)
scope_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/Updated scope villages& households"
)
output_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/outputs"
)
four_district <- read_xlsx(path = file.path(data_path, "four_district_2407.xlsx"))
four_scope_newly<- four_district %>%
filter(scope_2407 == 1 & status == "newly")
table(four_scope_newly$lot)
#randomization----
four_scope_newly <- four_scope_newly %>%
group_by(lot) %>%
arrange(lot, hh_head_06) %>%
mutate(
median_position = ceiling(n() / 2),  # Calculate median position within each group
hh_head_06_order = order(hh_head_06),  # Get the order of hh_head_06 values
median = ifelse(rank(hh_head_06_order) <= median_position, "above", "below")
) %>%
ungroup()
four_scope_newly %>%
group_by(lot) %>%
summarise(
n = n(),
survey = n*20,
vulnerable = sum(hh_head_06)
)
four_scope_newly <- four_scope_newly %>%
mutate(
strata = paste0(lot, "_", median)
)
table(four_scope_newly$strata)
#misfit global----
treatment <- treatment_assign(
data = four_scope_newly,
share_control = 0.25,
share_ti = c(0.25, 0.25, 0.25),
n_t = 3,
strata_varlist = dplyr::vars(lot, median),
missfits = "global",
key = "village_id",
seed = 073001
)
treatment <- as.data.frame(treatment$data) %>%
select(
village_id, treat
)
four_scope_newly <- left_join(four_scope_newly, treatment, by = c("village_id"))
rand_newly_sum <- four_scope_newly %>%
group_by(strata) %>%
summarise(
C = sum(treat == 0),
T1 = sum(treat == 1),
T2 = sum(treat == 2),
T3 = sum(treat == 3),
sum = n()
)
rand_newly_sum <- rand_newly %>%
group_by(strata) %>%
summarise(
C = sum(treat == 0),
T1 = sum(treat == 1),
T2 = sum(treat == 2),
T3 = sum(treat == 3),
sum = n()
)
summarise_row <-rand_newly %>%
summarise(
strata = "Total",
C = sum(rand_newly_sum$C),
T1 = sum(rand_newly_sum$T1),
T2 = sum(rand_newly_sum$T2),
T3 = sum(rand_newly_sum$T3),
sum = sum(rand_newly_sum$sum)
)
rand_newly_sum <- bind_rows(rand_newly_sum, summarise_row)
View(rand_newly_sum)
table(four_scope_newly$strata)
treatment <- treatment_assign(
data = four_scope_newly,
share_control = 0.25,
share_ti = c(0.25, 0.25, 0.25),
n_t = 3,
strata_varlist = dplyr::vars(strata),
missfits = "global",
key = "village_id",
seed = 073001
)
four_scope_newly %>%
group_by(lot, median) %>%
summarise( n = n())
treatment <- treatment_assign(
data = four_scope_newly,
share_control = 0.25,
share_ti = c(0.25, 0.25, 0.25),
n_t = 3,
strata_varlist = dplyr::vars(lot, median),
missfits = "global",
key = "village_id",
seed = 073001
)
treatment <- as.data.frame(treatment$data) %>%
select(
village_id, treat
)
table(treatment$treat)
four_scope_newly <- left_join(four_scope_newly, treatment, by = c("village_id"))
table(four_scope_newly$treat.y)
four_scope_newly<- four_district %>%
filter(scope_2407 == 1 & status == "newly")
table(four_scope_newly$lot)
#randomization----
four_scope_newly <- four_scope_newly %>%
group_by(lot) %>%
arrange(lot, hh_head_06) %>%
mutate(
median_position = ceiling(n() / 2),  # Calculate median position within each group
hh_head_06_order = order(hh_head_06),  # Get the order of hh_head_06 values
median = ifelse(rank(hh_head_06_order) <= median_position, "above", "below")
) %>%
ungroup()
four_scope_newly %>%
group_by(lot) %>%
summarise(
n = n(),
survey = n*20,
vulnerable = sum(hh_head_06)
)
four_scope_newly <- four_scope_newly %>%
mutate(
strata = paste0(lot, "_", median)
)
table(four_scope_newly$strata)
four_scope_newly %>%
group_by(lot, median) %>%
summarise( n = n())
treatment <- treatment_assign(
data = four_scope_newly,
share_control = 0.25,
share_ti = c(0.25, 0.25, 0.25),
n_t = 3,
strata_varlist = dplyr::vars(lot, median),
missfits = "global",
key = "village_id",
seed = 073001
)
treatment <- as.data.frame(treatment$data) %>%
select(
village_id, treat
)
table(treatment$treat)
four_scope_newly <- left_join(four_scope_newly, treatment, by = c("village_id"))
table(four_scope_newly$treat)
rand_newly_sum <- four_scope_newly %>%
group_by(strata) %>%
summarise(
C = sum(treat == 0),
T1 = sum(treat == 1),
T2 = sum(treat == 2),
T3 = sum(treat == 3),
sum = n()
)
View(rand_newly_sum)
summarise_row <-rand_newly_sum %>%
summarise(
strata = "Total",
C = sum(rand_newly_sum$C),
T1 = sum(rand_newly_sum$T1),
T2 = sum(rand_newly_sum$T2),
T3 = sum(rand_newly_sum$T3),
sum = sum(rand_newly_sum$sum)
)
rand_newly_sum <- bind_rows(rand_newly_sum, summarise_row)
View(rand_newly_sum)
household_head <- read_xlsx(path = file.path(data_path, "household_head_clean.xlsx"))
household_head_scope <- household_head %>%
filter(villageid_key %in% four_scope_newly$village_id)
household_head_scope <- household_head_scope %>%
group_by(villageid_key) %>%
mutate(household_id = row_number(),
household_id = paste0(villageid_key, household_id)) %>%
ungroup()
##Household Randomization------
household_select <- household_head_scope %>%
group_by(villageid_key) %>%
nest() %>%
mutate(sampled = map(data, ~ if (nrow(.x) <= 20) .x else sample_n(.x, size = 20))) %>%
select(villageid_key, sampled) %>%
unnest(sampled)
household_backup <- household_head_scope %>%
filter(!household_id %in% household_select$household_id)
household_backup <- household_backup %>%
group_by(villageid_key) %>%
nest() %>%
mutate(sampled = map(data, ~ sample_n(.x, size = 1))) %>%
select(villageid_key, sampled) %>%
unnest(sampled)
# household_select <- anti_join(household_select, household_backup, by = c("household_id"))
household <- list( `selected` = household_select, `backup` = household_backup)
join <- household_select %>%
group_by(villageid_key) %>%
summarise(surveyed = n())
four_scope_newly <- left_join(four_scope_newly, join, by = c("village_id" = "villageid_key"))
summarise <- four_scope_newly %>%
group_by(lot) %>%
summarise(
n = n(),
survey_hh = sum(surveyed),
vulnerable = sum(hh_head_06)
)
View(summarise)
unique_lots <- unique(four_scope_newly$lot)  # Get unique lots
for (lot in unique_lots) {
readyboard_village <- four_scope_newly %>%
filter(treat == 1 |treat == 3 ) %>%
filter(lot == !!lot) %>% # Use `!!` to evaluate `lot` variable
select(village_id, name, cell, sector, district, province)
readyboard_household <- household_head %>%
filter(villageid_key %in% readyboard_village$village_id) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid )
list <- list("village list" = readyboard_village, "household list" = readyboard_household)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list, path = file.path(scope_path, "EDCL", file_name))
}
write_xlsx(four_scope_newly, path = file.path(scope_path, "scope_193_0730.xlsx"))
four_scope_newly <- read_xlsx(four_scope_newly, path = file.path(scope_path, "scope_193_0730.xlsx"))
four_scope_newly <- read_xlsx(four_scope_newly, path = file.path(scope_path, "scope_193_0730.xlsx"))
four_scope_newly <- read_xlsx(path = file.path(scope_path, "scope_193_0730.xlsx"))
write_xlsx(list, path = file.path(scope_path, "EDCL", file_name), append = TRUE)
###For EDCL----
unique_lots <- unique(four_scope_newly$lot)  # Get unique lots
for (lot in unique_lots) {
readyboard_village <- four_scope_newly %>%
filter(treat == 1 |treat == 3 ) %>%
filter(lot == !!lot) %>% # Use `!!` to evaluate `lot` variable
select(village_id, name, cell, sector, district, province)
readyboard_household <- household_head %>%
filter(villageid_key %in% readyboard_village$village_id) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid )
list <- list("village list" = readyboard_village, "household list" = readyboard_household)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list, path = file.path(scope_path, "EDCL", file_name), append = TRUE)
}
###For EDCL----
unique_lots <- unique(four_scope_newly$lot)  # Get unique lots
for (lot in unique_lots) {
readyboard_village <- four_scope_newly %>%
filter(treat == 1 |treat == 3 ) %>%
filter(lot == !!lot) %>% # Use `!!` to evaluate `lot` variable
select(village_id, name, cell, sector, district, province)
readyboard_household <- household_head %>%
filter(villageid_key %in% readyboard_village$village_id) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid )
list <- list("village list" = readyboard_village, "household list" = readyboard_household)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list, path = file.path(scope_path, "EDCL", file_name))
}
offgrid_village <- four_scope_newly %>%
filter(treat == 2 |treat == 3) %>%
select(village_id, name, cell, sector, district, province)
write_xlsx(offgrid_village, path = file.path(scope_path, "Eligibility Tool", "offgrid_subsidy.xlsx"))
for (lot in unique_lots) {
village <- four_scope_newly %>%
filter(lot == !!lot) %>% # Use `!!` to evaluate `lot` variable
select(village_id, name, cell, sector, district, province)
households  <- household_select %>%
filter(villageid_key %in% village$village_id) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid )
back_up <- household_backup %>%
filter(villageid_key %in% village$village_id) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid )
list <- list("village list" = village, "household list" = households, "backup household" = back_up)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list, path = file.path(scope_path, "Lattanzio", file_name))
}
for (lot in unique_lots) {
village <- four_scope_newly %>%
filter(lot == !!lot) %>% # Use `!!` to evaluate `lot` variable
select(village_id, name, cell, sector, district, province)
households  <- household_select %>%
filter(villageid_key %in% village$village_id) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid )
back_up <- household_backup %>%
filter(villageid_key %in% village$village_id) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid )
list <- list("village list" = village, "household list" = households, "backup household" = back_up)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list, path = file.path(scope_path, "Lattanzio", file_name))
}
rlang::last_trace()
###For survey firm----'
household_select <- read_xlsx(scope_path, "scope_households_0729.xlsx
")
###For survey firm----'
household_select <- read_xlsx(scope_path, "scope_households_0729.xlsx", sheet = "selected")
###For survey firm----'
household_select <- read_xlsx(file.path(scope_path, "scope_households_0729.xlsx"), sheet = "selected")
household_backup <- read_xlsx(file.path(scope_path, "scope_households_0729.xlsx"), sheet = "backup")
for (lot in unique_lots) {
village <- four_scope_newly %>%
filter(lot == !!lot) %>% # Use `!!` to evaluate `lot` variable
select(village_id, name, cell, sector, district, province)
households  <- household_select %>%
filter(villageid_key %in% village$village_id) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid )
back_up <- household_backup %>%
filter(villageid_key %in% village$village_id) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid )
list <- list("village list" = village, "household list" = households, "backup household" = back_up)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list, path = file.path(scope_path, "Lattanzio", file_name))
}
for (lot in unique_lots) {
# Create village data frame
village <- four_scope_newly %>%
filter(lot == !!lot) %>%
select(village_id, name, cell, sector, district, province)
# Extract village_id as a vector for filtering
village_ids <- village %>% pull(village_id)
# Filter household_select using the extracted village_ids
households <- household_select %>%
filter(villageid_key %in% village_ids) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid)
# Filter household_backup using the extracted village_ids
back_up <- household_backup %>%
filter(villageid_key %in% village_ids) %>%
select(villageid_key, village, cell, sector, district, code, first_name, last_name, gender, nid)
# Create a list with the data frames
list <- list("village list" = village, "household list" = households, "backup household" = back_up)
# Define the file name and write to Excel
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list, path = file.path(scope_path, "Lattanzio", file_name))
}
