select(villageid_key, village, cell, sector, district, first_name, last_name, gender, nid )
list <- list("village list" = readyboard_village, "household list" = readyboard_household)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list, path = file.path(scope_path, "EDCL", file_name))
}
###For ready board subsidy----
for (lot in unique_lots) {
offgrid_village <- four_scope_newly %>%
filter(treat == 2 |treat == 3) %>%
filter(lot == !!lot) %>% # Use `!!` to evaluate `lot` variable
select(village_id, name, cell, sector, district, province)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(offgrid_village, path = file.path(scope_path, "Eligibility Tool", file_name))
}
offgrid_village <- four_scope_newly %>%
filter(treat == 2 |treat == 3) %>%
select(village_id, name, cell, sector, district, province)
write_xlsx(offgrid_village, path = file.path(scope_path, "Eligibility Tool", "offgrid_subsidy.xlsx"))
###For survey firm----
unique_lots <- unique(four_scope_newly$lot)
for (lot in unique_lots) {
village <- four_scope_newly %>%
filter(lot == !!lot) %>%
select(village_id, name, cell, sector, district, province)
village_join <- village %>%
select(village_id)
households  <- household_select %>%
semi_join(village_join, by = c("villageid_key" = "village_id")) %>%
select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
back_up <- household_backup %>%
semi_join(village_join, by = c("villageid_key" = "village_id")) %>%
select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
list_to_write <- list("village list" = village, "household list" = households, "backup household" = back_up)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list_to_write, path = file.path(scope_path, "Lattanzio", file_name))
}
#For surveyCTO----
villages <- read.csv(file = file.path(data_path, "vills.csv"))
villages <- villages %>%
mutate(villageid_key = as.character(villageid_key))
admin_raw <- left_join(four_scope_newly, villages, by = c("village_id" = "villageid_key"))
admin_raw <- admin_raw %>%
rename(
num_to_survey = surveyed,
villageid_key = village_id,
treatment = treat
) %>%
mutate(
sector_key = str_to_title(sector_key)
) %>%
select(ends_with("key"), num_to_survey, treatment)
hfc_data_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/HFC"
)
write.csv(admin_raw, file = file.path(hfc_data_path, "data", "admin_raw.csv"))
four_scope_newly <- read_xlsx(path = file.path(scope_path, "scope_193_0807.xlsx"))
pacman::p_load(knitr, tidyverse, dplyr, here, sf, ggplot2, readxl, writexl, janitor, randomizr, gtsummary)
getwd()
#Dropbox----
if (Sys.getenv("USERNAME") == "wb614406"){
DROPBOX <- file.path("C:/Users/wb614406/Dropbox")
}
#Method One----
path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/data/four_district_2408.xlsx"
)
data_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/data"
)
output_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/data"
)
scope_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/Updated scope villages& households"
)
offgrid_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/Offgrid"
)
ignite <- read_xlsx(path = file.path(offgrid_path, "IGNITE Impact Analysis of Ubudehe Removal on Customer Engagement and Connections of SHS.xlsb", sheet = "Raw Data"))
offgrid_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/Offgrid"
)
##############
#Author: Xiaoming Zhang
#Date: 9.23.2024
#Purpose: Offgrid informations
#############
install.packages("readxlsb")
pacman::p_load(knitr, tidyverse, dplyr, here, sf, ggplot2, readxl, readxlsb, writexl, janitor, randomizr, gtsummary)
getwd()
ignite <- read_xlsb(path = file.path(offgrid_path, "IGNITE Impact Analysis of Ubudehe Removal on Customer Engagement and Connections of SHS.xlsb", sheet = "Raw Data"))
pacman::p_load(knitr, tidyverse, dplyr, here, sf, ggplot2, readxl, writexl, janitor, randomizr, RCT, purrr)
getwd()
#Dropbox----
if (Sys.getenv("USERNAME") == "wb614406"){
DROPBOX <- file.path("C:/Users/wb614406/Dropbox")
}
path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/data/four_district_2402.xlsx"
)
data_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/data"
)
scope_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/Updated scope villages& households"
)
output_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/outputs"
)
four_scope_newly <- read_xlsx(path = file.path(scope_path, "scope_193_0807.xlsx"))
vills <- read.csv(path = file.path(data_path, "vills.csv"))
vills <- read.csv(file.path(data_path, "vills.csv"))
View(vills)
View(four_scope_newly)
four_scope <- vills %>%
filter(villageid_key %in% four_scope_newly$village_id)
write_csv(four_scope(file.path(data_path, "scope_villages.csv")))
write_csv(four_scope, (file.path(data_path, "scope_villages.csv")))
household_select <- read_xlsx(path = file.path(scope_path, "household_select_0807.xlsx"))
set.seed(082801)
household_backcheck <- household_select %>%
group_by(villageid_key) %>%
nest() %>%
mutate(sampled = map(data, ~sample_n(.x, size = 4))) %>%
select(villageid_key, sampled) %>%
unnest(cols = sampled)
household_backcheck_backup <-
household_select %>%
filter(!household_id %in% household_backcheck$household_id)
set.seed(082802)
household_backcheck_backup <- household_backcheck_backup %>%
group_by(villageid_key) %>%
nest() %>%
mutate(sampled = map(data, ~sample_n(.x, size = 1))) %>%
select(villageid_key, sampled) %>%
unnest(cols = sampled)
write.csv(household_backcheck, file.path(scope_path, "Backcheck", "household_head.csv"))
backcheck_villages <- four_scope %>%
filter(villageid_key %in% household_backcheck$villageid_key)
backcheck_villages <- four_scope %>%
filter(villageid_key %in% household_backcheck$villageid_key)
write.csv(backcheck_villages, file.path(scope_path, "Backcheck", "scope_villages.csv"))
pacman::p_load(knitr, tidyverse, dplyr, here, sf, ggplot2, readxl, writexl, janitor, randomizr, RCT, purrr)
getwd()
#Dropbox----
if (Sys.getenv("USERNAME") == "wb614406"){
DROPBOX <- file.path("C:/Users/wb614406/Dropbox")
}
path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/data/four_district_2402.xlsx"
)
data_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/data"
)
scope_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/Updated scope villages& households"
)
output_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/outputs"
)
four_scope_newly <- read_xlsx(path = file.path(scope_path, "scope_193_0807.xlsx"))
##Survey CTO----
household_select <- read_xlsx(path = file.path(scope_path, "household_select_0807.xlsx"))
View(household_select)
household_select <- household_select %>%
mutate(
household_id = as.character(household_id)
)
write.csv(household_select, file.path(scope_path, "household_head.csv"))
#Author: Xiaoming Zhang
#Date: 10.8.2024
#Purpose: Randomization primary construction
#############
pacman::p_load(knitr, tidyverse, dplyr, here, sf, ggplot2, readxl, writexl, janitor, randomizr, RCT, purrr)
getwd()
#Dropbox----
if (Sys.getenv("USERNAME") == "wb614406"){
DROPBOX <- file.path("C:/Users/wb614406/Dropbox")
}
path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/data/four_district_2402.xlsx"
)
data_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/data"
)
scope_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/Updated scope villages& households"
)
output_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/outputs"
)
juru_hh <- read_xlsx(path = file.path(data_path, "JURU HH NEED EUCL.xlsx"))
bugesera_villages <- read_xlsx(path = file.path(data_path, "Bugesera_Impact Ass._Villages.xlsx"))
rwa_villages <- read.csv(path = file.path(data_apth, "vill.csv"))
rwa_villages <- read.csv(path = file.path(data_path, "vill.csv"))
rwa_villages <- read.csv(file.path(data_path, "vill.csv"))
rwa_villages <- read.csv(file.path(data_path, "vills.csv"))
View(bugesera_villages)
View(rwa_villages)
bugesera_villages <- rwa_villages %>%
filter(district_key %in% "Bugesera") %>%
filter(sector_key %in% "Juru") %>%
filter(village_key %in% bugesera_villages$Village)
View(bugesera_villages)
bugesera_villages <- read_xlsx(path = file.path(data_path, "Bugesera_Impact Ass._Villages.xlsx"))
bugesera_villages_join <- rwa_villages %>%
filter(district_key %in% "Bugesera") %>%
filter(sector_key %in% "Juru") %>%
filter(village_key %in% bugesera_villages$Village)
View(bugesera_villages_join)
View(bugesera_villages)
bugesera_villages_join <- rwa_villages %>%
filter(district_key %in% "Bugesera") %>%
filter(sector_key %in% "Juru") %>%
filter(village_key %in% bugesera_villages$Village) %>%
filter(!cell_key %in% "Musovu")
write.csv(bugesera_villages_join, file.path(data_path, "pilot villages", "Bugesera villages.csv"))
View(juru_hh)
sum(is.na(juru_hh$Category))
View(bugesera_villages_join)
juru_hh_clean <- juru_hh %>%
filter(Category == 1) %>%
mutate(
village_id = substr(code, 1, 8)
)
juru_hh_clean <- juru_hh %>%
filter(Category == 1) %>%
mutate(
village_id = substr(Code, 1, 8)
)
juru_hh_group <- juru_hh_clean %>%
group_by(village_id) %>%
summarise(n = n())
View(juru_hh_group)
set.seed(123)  # for reproducibility
juru_hh_group <- juru_hh_clean %>%
group_by(village_id) %>%
mutate(sample_type = case_when(
row_number(Code) <= 10 ~ "Main",
row_number(Code) > 10 & row_number(Code) <= 12 ~ "Backup",
TRUE ~ NA_character_
)) %>%
filter(!is.na(sample_type)) %>%
arrange(village_id, sample_type)
source("~/GitHub/rwanda-energy-project/RCT_data/baseline/scripts/pilot_villages.R", echo=TRUE)
juru_main <- juru_hh_group %>%
filter(sample_type == "Main") %>%
select(-sample_type)
juru_main %>%
group_by(village_id) %>%
summarise(
n = n()
)
juru_backup <- juru_hh_group %>%
filter(sample_type == "Backup") %>%
select(-sample_type)
write_xlsx(
list(Main = juru_main, Backup = juru_backup),
path = file.path(data_path, "pilot villages", "juru_households.xlsx")
)
write.csv(juru_hh_group, file.path(data_path, "pilot villages", "household_head.csv"))
juru_hh_group <- juru_hh_clean %>%
group_by(village_id) %>%
mutate(sample_type = case_when(
row_number(Code) <= 10 ~ "Main",
row_number(Code) > 10 & row_number(Code) <= 12 ~ "Backup",
TRUE ~ NA_character_
)) %>%
filter(!is.na(sample_type)) %>%
arrange(village_id, sample_type)  %>%
rename(
household_id = Code,
villageid_key = village_id
) %>%
mutate(
household_id = as.character(household_id)
)
juru_main <- juru_hh_group %>%
filter(sample_type == "Main") %>%
select(-sample_type)
juru_backup <- juru_hh_group %>%
filter(sample_type == "Backup") %>%
select(-sample_type)
write_xlsx(
list(Main = juru_main, Backup = juru_backup),
path = file.path(data_path, "pilot villages", "juru_households.xlsx")
)
write.csv(juru_hh_group, file.path(data_path, "pilot villages", "household_head.csv"))
juru_backcheck <- juru_main %>%
group_by(village_id) %>%
sample_n(2) %>%
ungroup()
juru_backcheck <- juru_main %>%
group_by(villageid_key) %>%
sample_n(2) %>%
ungroup()
View(juru_backcheck)
write_xlsx(juru_backcheck, path = file.path(data_path, "pilot_villages", "Juru_bachcheck_households.xlsx"))
write_xlsx(juru_backcheck, path = file.path(data_path, "pilot_villages", "Juru_bachcheck_households.xlsx"))
write_xlsx(juru_backcheck, path = file.path(data_path, "pilot villages", "Juru_bachcheck_households.xlsx"))
household_select <- read_xlsx(path = file.path(scope_path, "household_select_0807.xlsx"))
pacman::p_load(knitr, tidyverse, dplyr, here, sf, ggplot2, readxl, writexl, janitor, randomizr, RCT, purrr)
getwd()
household_select <- read_xlsx(path = file.path(scope_path, "household_select_0807.xlsx"))
household_select <- household_select %>%
mutate(
household_id = as.character(household_id)
)
write.csv(household_select, file.path(scope_path, "household_head.csv"))
write_xlsx(household_select, file.path(scope_path, "household_head.xlsx"))
options(scipen = 999)
write.csv(household_select, file.path(scope_path, "household_head.csv"))
p1 <- ggplot(customer_graph, aes(x = customer)) +
geom_bar(fill = "lightblue", color = "black") +
geom_vline(xintercept = c(20), linetype = "dashed", color = "red") +
labs(
title = "Surveyed customer distribution in the four districts(50 and under)",
x = "Number of Surveyed Customer",
y = "Number of Villages"
)
p1
pacman::p_load(knitr, tidyverse, dplyr, here, sf, ggplot2, readxl, writexl, janitor, randomizr, RCT, purrr)
getwd()
household_csv <- read.csv("C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/questionnaires/cto attachments/household_head.csv")
household_join <- read_xlsx(path = file.path(scope_path, "household_join_1111.xlsx"))
filter <- household_join %>%
filter(household_id %in% household_csv$household_id)
if (Sys.getenv("USERNAME") == "wb614406"){
DROPBOX <- file.path("C:/Users/wb614406/Dropbox")
}
path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/data/four_district_2402.xlsx"
)
data_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/data"
)
scope_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/Updated scope villages& households"
)
output_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/outputs"
)
household_csv <- read.csv("C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/questionnaires/cto attachments/household_head.csv")
household_join <- read_xlsx(path = file.path(scope_path, "household_join_1111.xlsx"))
if (Sys.getenv("USERNAME") == "wb614406"){
DROPBOX <- file.path("C:/Users/wb614406/Dropbox")
}
path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/data/four_district_2402.xlsx"
)
data_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/data"
)
scope_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/data/Updated scope villages& households"
)
output_path <- file.path(
DROPBOX,
"Rwanda Energy/EAQIP/datawork/RCT_data",
"baseline/outputs"
)
household_join <- read_xlsx(path = file.path(scope_path, "household_join_1111.xlsx"))
household_head <- read_xlsx(path = file.path(data_path, "household_head_clean.xlsx"))
scope <-read_xlsx(path = file.path(scope_path, "scope_193_0807.xlsx"))
View(scope)
scope_csv <- read.csv("C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/questionnaires/REP Backcheck survey/cto attachments/scope_villages.csv")
filter <- scope_csv %>%
filter(villageid_key%in% scope$village_id)
View(household_join)
household_head_replacement <- household_head %>%
filter(villageid_key %in% scope$village_id) %>%
anti_join(household_join, by = c("household_id"))
nrow(household_head_replacement) = nrow(household_head) - nrow(household_join)
nrow(household_head_replacement) == nrow(household_head) - nrow(household_join)
View(household_head_replacement)
number <- household_head_replacement %>%
group_by(villageid_key) %>%
summarise(
replacement = n()
)
scope <- scope %>%
mutate(
replacement = hh_head_06 - surveyed
)
scope <- left_join(scope, number, by = c("village_id" = "villageid_key"))
View(scope)
View(household_head_replacement)
household_head_replacement_randomized <- household_head_replacement %>%
group_by(villageid_key) %>%
mutate(random_order = sample(row_number())) %>%
arrange(villageid_key, random_order) %>%
ungroup()
View(household_head_replacement_randomized)
write.csv(household_head_replacement_randomized, file.path(scope_path, "household_replacement.csv"))
View(household_head_replacement_randomized)
household_select <- read_xlsx(path = file.path(scope_path, "household_select_0807.xlsx"))
household_backup <- read_xlsx(path = file.path(scope_path, "household_backup_0807.xlsx"))
nrow(household_select) + nrow(household_backup) + nrow(household_head_replacement) == nrow(household_head)
#Select replacement----
household_head_scope <- household_head %>%
filter(villageid_key %in% scope$village_id)
household_head_replacement <- household_head_scope %>%
anti_join(household_join, by = c("household_id"))
nrow(household_select) + nrow(household_backup) + nrow(household_head_replacement) == nrow(household_head_scope)
View(household_head_scope)
unique_lots <- unique(scope$lot)
write_xlsx(list_to_write, path = file.path(scope_path, "Lattanzio", file_name))
write_xlsx(list_to_write, path = file.path(scope_path, "Survey firm", file_name))
for (lot in unique_lots) {
village <- scope %>%
filter(lot == !!lot) %>%
select(village_id, name, cell, sector, district, province)
village_join <- village %>%
select(village_id)
households  <- household_select %>%
semi_join(village_join, by = c("villageid_key" = "village_id")) %>%
select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
back_up <- household_backup %>%
semi_join(village_join, by = c("villageid_key" = "village_id")) %>%
select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
replacement <- household_replacement_rand %>%
semi_join(village_join, by = c("villageid_key" = "village_id")) %>%
select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
list_to_write <- list("village list" = village, "household list" = households, "backup household" = back_up, "replacement_household" = replacement)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list_to_write, path = file.path(scope_path, "Survey firm", file_name))
}
household_replacement <- household_head_scope %>%
anti_join(household_join, by = c("household_id"))
set.seed(1118)  # Ensure reproducibility
household_replacement_rand <- household_replacement %>%
group_by(villageid_key) %>%
mutate(random_order = sample(row_number())) %>%
arrange(villageid_key, random_order) %>%
ungroup()
write.csv(household_replacement_rand, file.path(scope_path, "household_replacement.csv"))
household_select <- read_xlsx(path = file.path(scope_path, "household_select_0807.xlsx"))
household_backup <- read_xlsx(path = file.path(scope_path, "household_backup_0807.xlsx"))
nrow(household_select) + nrow(household_backup) + nrow(household_head_replacement) == nrow(household_head_scope)
write_xlsx(household_replacement_rand, path = file.path(scope_path, "household_replacement.xlsx"))
##For survey firm----
unique_lots <- unique(scope$lot)
for (lot in unique_lots) {
village <- scope %>%
filter(lot == !!lot) %>%
select(village_id, name, cell, sector, district, province)
village_join <- village %>%
select(village_id)
households  <- household_select %>%
semi_join(village_join, by = c("villageid_key" = "village_id")) %>%
select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
back_up <- household_backup %>%
semi_join(village_join, by = c("villageid_key" = "village_id")) %>%
select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
replacement <- household_replacement_rand %>%
semi_join(village_join, by = c("villageid_key" = "village_id")) %>%
select(villageid_key, village, cell, sector, district, household_id, first_name, last_name, gender, nid)
list_to_write <- list("village list" = village, "household list" = households, "backup household" = back_up, "replacement_household" = replacement)
file_name <- paste0("Lot_", lot, ".xlsx")
write_xlsx(list_to_write, path = file.path(scope_path, "Survey firm", file_name))
}
