########################################################################################################
#                                                                                                      #
#                HIGH-FREQUENCY CHECKS AND BACKCHECK COMPARISON                                        #
#                                                                                                      #
########################################################################################################

## PURPOSE      Comparison between main HH survey and BC survey
## AUTHOR      Xiaoming Zhang (adapted from Juliana Guerrero, Adrien Ciret & Marc-Andrea Fiorina)
## LAST UPDATE  October 9, 2024

########################################################################################################


##########################################################################
## data
##########################################################################

##output path

bc_output <- file.path("C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/questionnaires/REP Backcheck survey/Backcheck List")


##Backcheck select for the next day----

daily <- hfc_constr %>% 
  filter(
    submissiondate == "2024-11-16" 
  ) %>% 
  select(
    submissiondate, enumerator, enumerator_key,
    district, sector, cell, village, hh_id,
    village,  hh_id, phonenumber, second_phonenumber
  )



set.seed(1116)
select <- hfc_constr %>% 
  filter(
    submissiondate == "2024-11-16" 
  ) %>% 
  select(
    submissiondate, enumerator, enumerator_key,
    district, sector, cell, village, hh_id,
    village,  hh_id, phonenumber, second_phonenumber
  ) %>% 
  sample_n(min(n(), 20)) 

vills <- read.csv(file.path(data_path, "vills.csv"))

select <- left_join(select, vills, by = c("village" =  "villageid_key"))


select <- select %>% 
  rename(
    villageid_key = village
  ) %>% 
  select(
    districtid_key, district_key, sectorid_key, sector_key, cellid_key, cell_key, villageid_key, village_key, hh_id, phonenumber, second_phonenumber
  ) %>% 
  mutate(
    hh_id = as.character(hh_id)
  )

backup_select <- hfc_constr %>%
  filter(
    submissiondate == "2024-11-16",
    !(hh_id %in% select$hh_id)  # Exclude already selected households
  ) %>%
  sample_n(5) %>% 
  rename(
    districtid_key = district,
    sectorid_key = sector,
    cellid_key = cell, 
    villageid_key = village
  ) %>% 
  select(
    districtid_key, district_key, sectorid_key, sector_key,
    cellid_key, cell_key, villageid_key, village_key,
    hh_id, phonenumber, second_phonenumber
  ) %>%
  mutate(hh_id = as.character(hh_id))

write_xlsx(
  list(
    "Main Selection" = select,
    "Backup Selection" = backup_select
  ),
  path = file.path(bc_output, paste0("backcheck_", format(Sys.time(), "%Y%m%d"), ".xlsx")))


write_xlsx(daily, path = file.path(bc_output, paste0("daily completed_", format(Sys.time(), "%Y%m%d"), ".xlsx")))

##Output for CTO----

join <- rbind(select, backup_select)

household_head <- join %>% 
  rename(
    household_id = hh_id
  )

household_yesterday <- read_xlsx(path = file.path(bc_output, paste0("household_head", format(Sys.Date() - 1, "%Y%m%d"), ".xlsx")))

household_head <- rbind(household_head, household_yesterday)

write_xlsx(household_head, path = file.path(bc_output, paste0("household_head", format(Sys.time(), "%Y%m%d"), ".xlsx")))

write.csv(household_head, "C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/questionnaires/REP Backcheck survey/cto attachments/household_head.csv")



##Audio check----

audio <- anti_join(hfc_constr, select, by = ("hh_id"))

audio_select <- audio %>% 
  rename(
    villageid_key = village,
    districtid_key = district,
    sectorid_key = sector,
    cellid_key = cell
  ) %>% 
  select(
    districtid_key, district_key, sectorid_key, sector_key, cellid_key, cell_key, villageid_key, village_key, hh_id, phonenumber, audio
  ) %>% 
  mutate(
    hh_id = as.character(hh_id)
  ) %>% 
  sample_n(min(n(), 20))


# Create a new folder with the date as the name
audio_folder <- file.path("C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/questionnaires/REP Backcheck survey/Audio Check", format(Sys.Date(), "%Y%m%d"))
dir.create(audio_folder, showWarnings = FALSE)

write_xlsx(audio_select, path = file.path(audio_folder, "audio check"))
# Define the media folder path
source_folder <- "C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/datawork/HFC/data/media"

# Extract the filenames (without 'media\' prefix)
audio_filenames <- basename(audio_select$audio)

# Full paths to the audio files in the media folder
audio_files <- file.path(source_folder, audio_filenames)

# Check which files exist and filter them
existing_files <- audio_files[file.exists(audio_files)]

# Copy the filtered files to the new folder
file.copy(existing_files, audio_folder)

write_xlsx(audio_select, path = file.path(audio_folder, "audiocheck_list.xlsx"))






##Backcheck data clean----

raw <- read.csv(file = file.path(data_path, "REP_backcheck_WIDE.csv"))


# 1. Construction----
#Variables submissiondate, starttime, endtime are recorded in dmy hms hence treated accordingly
date_variables_dmy <- raw %>%
  select(
    SubmissionDate, starttime, endtime
  )%>%
  names()

#Change date and timezone

raw <- raw %>%
  mutate(
    across(
      date_variables_dmy,
      ~ (mdy_hms(.,tz = Sys.timezone() ))))


# Module specific time stamps are recorded in ymd hms hence treated accordingly

date_variables_ymd <- raw %>%
  select(
    ends_with("_start"), starts_with("end")
  ) %>% names()


raw <- raw %>%
  mutate(across(date_variables_ymd,
                ~ (ymd_hms(.,
                           tz = Sys.timezone() )
                )))


## Date filter

hfc_constr_bc <- raw %>%
  filter(starttime >= as.Date("2024-04-01"))

##NA
hfc_constr_bc <- hfc_constr_bc %>%
  mutate(
    across(
      where(is.numeric),
      ~ case_when(
        .x %in% c(-66, -88, -77, -99) ~ NA_real_,
        TRUE                     ~ .x
      )
    )
  )

## Date construct
hfc_constr_bc <- hfc_constr_bc %>%
  mutate(
    submissiondatetime     = SubmissionDate,
    submissiondate         = lubridate::date(submissiondatetime),
    startdate              = lubridate::date(starttime),
    enddate                = lubridate::date(endtime)
  ) 





#Join enumerators
enumerators <- read.csv(file.path(data_path, "pilot_enumerators_bc.csv"))

# add enumerator name 
hfc_constr_bc <- hfc_constr_bc %>% 
  left_join(enumerators,by=c('enumerator'='enumeratorid_key'))


##Village-key

village <- read.csv(file.path(
  data_path, "admin_raw.csv"
))

village<- village %>% 
  select( ends_with("key"))

hfc_constr_bc <- left_join(hfc_constr_bc, village, by = c("village" = "villageid_key",
                                                    "cell" = "cellid_key",
                                                    "sector" = "sectorid_key",
                                                    "district" = "districtid_key"))




# 2. Backcheck full data ----
backcheck_select <- hfc_constr_bc %>% 
  select(
    hh_id, submissiondate, formdef_version, enumerator, enumerator_key, surveyed, 
    A1_1, H1_1, H2_1, H4_1, H5_1, H6_1, H8_6, H8_7, 
    D1_1, E1_1, formal_savings, informal_savings, 
    F1_1, G1_1, G1_2, G1_3
  ) %>% 
  rename_with(~ paste0(., "_bc"), 
              -c(hh_id, submissiondate)) %>% 
  filter(
    formdef_version_bc >= 2024111101
  ) %>% 
  mutate(hh_id = as.character(hh_id))


main_select <- hfc_constr %>% 
  select(
    hh_id, district_key, sector_key, cell_key, village_key, village, district,  submissiondate, formdef_version, enumerator, enumerator_key, 
    A1_1, H1_1, H2_1, H4_1, H5_1, H6_1, H8_6, H8_7, 
    D1_1, E1_1, formal_savings, informal_savings, 
    F1_1, G1_1, G1_2, G1_3
  ) 

backcheck_join <- left_join(backcheck_select, main_select, by = c("hh_id", "submissiondate"))


backcheck_data <- backcheck_join%>% 
  mutate(
      issue = case_when(
        A1_1 != A1_1_bc ~ "Household member number mismatch",
        H1_1 != H1_1_bc ~ "Grid connection mismatch", 
        H2_1 != H2_1_bc ~ "Solar connection mismatch",
        H4_1 != H4_1_bc ~ "Candel mismatch", 
        H5_1 != H5_1_bc ~ "Biomass mismatch",
        H6_1 != H6_1_bc ~ "Kerosenemismatch", 
        H8_6 != H8_6_bc ~ "lightbulb mismatch", 
        H8_7 != H8_7_bc ~ "lightbulb number mismatch", 
        D1_1 != D1_1_bc ~ "Business mismatch", 
        E1_1 != E1_1_bc ~ "Household banking mismatch", 
        formal_savings != formal_savings ~ "Formal savings mismatch", 
        informal_savings != informal_savings ~ "Informal savings mismatch", 
        F1_1 != F1_1_bc ~ "Tablet number mismatch", 
        G1_1 != G1_1_bc ~ "Land ownership mismatch", 
        G1_2 != G1_2_bc ~ "Land rental mismatch", 
        G1_3 != G1_3_bc ~ "Livestock mismatch",
        .default = "No issue found"
    )
  ) %>% 
  select(
      hh_id, submissiondate,  
      enumerator,enumerator_key, enumerator_bc, enumerator_key_bc, issue, 
      A1_1, A1_1_bc, H1_1, H1_1_bc, H2_1, H2_1_bc, H4_1, H4_1_bc, 
      H5_1, H5_1_bc, H6_1, H6_1_bc, H8_6, H8_6_bc, H8_7, H8_7_bc, 
      D1_1, D1_1_bc, E1_1, E1_1_bc, 
      formal_savings, formal_savings_bc, informal_savings, informal_savings_bc, 
      F1_1, F1_1_bc, G1_1, G1_1_bc, G1_2, G1_2_bc, G1_3, G1_3_bc, 
      district_key, sector_key, cell_key, village_key, village, district,
      formdef_version, formdef_version_bc
    )
  


hfc_sheet %>%
  sheet_write(data = backcheck_data, sheet = "backcheck_full_data")

1


#3. Backcheck summary----

backcheck_summary <- backcheck_data %>%
  group_by(submissiondate, issue) %>%
  summarise(
    n = n()
  ) %>% 
  ungroup() %>%
  pivot_wider(
    names_from = submissiondate,   
    values_from = n,               
    values_fill = 0                
  ) %>%
  mutate(total_n = rowSums(across(-issue))) %>% 
  select(issue, total_n, everything()) %>% 
  rename(
    `backcheck issue` = issue
  )

hfc_sheet %>%
  sheet_write(data = backcheck_summary, sheet = "backcheck_summary")

1
