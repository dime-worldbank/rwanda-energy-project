#     ~ case_when(
#       is.na(.x) ~ 0,
#       TRUE      ~ .x
#     )
#   )
# ) %>%
select(
enumerator, enumerator_key, order(colnames(.)) # So that the days are ordered chronologically
)
#2.Completion rate----
## Encoding Consent Variable - # Consent is imported as character type, encode Yes = 1 , No = 0
# hfc_constr <- hfc_constr %>%
#   mutate(
#     survey_complete_c=ifelse(finish ==1,'Yes','No'),
#     consent_c=ifelse(consent==1,'Yes','No')
#   )
#
#
# hfc_constr <- hfc_constr %>%
#   mutate(
#     enumerator_key = ifelse(enumerator_key %in% "Other", enumerator_other, enumerator_key)
#   )
completion <- hfc_constr %>%
group_by(enumerator, enumerator_key) %>%
summarise(
attempt = n(),
complete = sum(finish == 1),
no_complete = sum(finish == 0),
consent = sum(consent == 1),
no_consent = sum(consent == 0),
completion_rate = paste0(round(complete / attempt, 3) * 100, "%"),
consent_rate = paste0(round(consent / attempt, 3) * 100, "%")
) %>%
ungroup()
# enumerator_check <- left_join(enumerator_day, completion, by = c("enumerator", "enumerator_key"))
#3. Location accuracy issue----
accuracy <- hfc_constr %>%
select(submissiondate, coordinate.Accuracy, enumerator, enumerator_key, hh_id, district, district_key, sector, sector_key, cell, cell_key, village, village_key) %>%
filter(coordinate.Accuracy > 8)
hfc_sheet %>%
sheet_write(data = accuracy, sheet = "coordinate_accuracy")
1
#4. Quality----
#This is for enumerator general quality
enumerators <- enumerators %>%
mutate(enumeratorid_key = as.character(enumeratorid_key))
enumerator_check <- left_join(enumerators, completion, by = c("enumeratorid_key" = "enumerator"))
enumerator_check <- enumerator_check %>%
rename(enumerator = enumeratorid_key) %>%
mutate(
duplicates = ifelse(enumerator %in% duplicates$enumerator, "Yes", "No"),
high_survey_length = ifelse(enumerator %in% high_length_check$enumerator,"Yes", "No"),
low_survey_length = ifelse(enumerator %in% low_length_check$enumerator, "Yes", "No"),
coordinate_accuracy = ifelse(enumerator %in% accuracy$enumerator,"Yes", "No")
)
hfc_sheet %>%
sheet_write(data = enumerator_check, sheet = "enumerator_quality")
1
#Import Data ----
# For each variable of interest, we want to output its:
# mean
# standard deviation
# mininum
# maximum
# median
##1. General Descriptive-----
desc_stats_variables <- c(
"A2_4", #primary occupation salary
"A3_5", #secondary occupation salary
"H4_2", #candle expenditure
"H5_4", #biomass expenditure
"H6_2", #kerosene
"B4_1", #energy reliability
"B4_2", #energy efficiency
"B4_3", #energy accessibility
"B4_4", #light accessbility
"B4_5", #energy service satisfaction
"B4_6", #anxiety related to energy
"B4_7", #energy challenges
"B4_8", #energy and peace of mind
"B5_1", #personal ladder
"B5_2", #ladder one year back
"B5_3", #financial situation
"B5_4", #cooking ladder
"B5_5", #mobile phone charging ladder
"B5_6", #lighting ladder
"B5_7", #energy satisfaction
"B5_8", #energy general
"J1_final", #wtp_fixed
"J2_1", #wtp_fixed_appliance
"J3_1", #wtp_fixed_low_reliability
"J4_2", #wtp_paygo_12
"J5_2", #wtp_paygo_24
"J6_1", #wtp_lightbulb
"E2_3", #formal savings
"E3_3", #informal savings
"I4_1", #fuel preparation women
"I4_2" #fuel preparation men
#general wellbeing
#social desirability
)
desc_stats_labels <- c(
"A2_4" = "primary_salary",
"A3_5" = "secondary_salary",
"H4_2"= "candle_exp",
"H5_4" = "biomass_exp",
"H6_2" = "kerosene_exp",
"B4_1" = "energy_reliability",
"B4_2" = "energy_efficiency",
"B4_3" = "energy_accessibility",
"B4_4" = "light_accessbility",
"B4_5" = "service_satisfaction",
"B4_6" = "anxiety_energy",
"B4_7" = "energy_challenges",
"B4_8" = "energy_peace_mind",
"B5_1" = "personal_ladder",
"B5_2" = "ladder_year_back",
"B5_3" = "financial_situation",
"B5_4" = "cooking _ladder",
"B5_5" = "mobile_ladder",
"B5_6" = "lighting_ladder",
"B5_7" = "energy_satisfaction",
"B5_8"= "energy_general",
"J1_final"= "wtp_fixed",
"J2_1" = "wtp_fixed_appliance",
"J3_1" = "wtp_fixed_low_reliability",
"J4_2" = "wtp_paygo_12",
"J5_2" = "wtp_paygo_24",
"J6_1" = "wtp_lightbulb",
"E2_3" = "formal_savings",
"E3_3" = "informal_savings",
"I4_1" = "fuel_prep_women",
"I4_2" = "fuel_prep_men"
)
desc_stats_check <- hfc_constr %>%
summarize(
across(
all_of(desc_stats_variables),
list(
mean     = ~ mean(.x, na.rm = TRUE),
sd       = ~ sd(.x, na.rm = TRUE),
min      = ~ min(.x, na.rm = TRUE),
max      = ~ max(.x, na.rm = TRUE),
median   = ~ median(.x, na.rm = TRUE)
)
)
) %>%
pivot_longer(
cols          = everything(),
names_to      = c("var", "stat"),
names_pattern = "^(.*)_(mean|sd|min|max|median)$"
) %>%
pivot_wider(
names_from  = "stat",
values_from = "value"
)  %>%
mutate(across(everything(), ~ ifelse(is.nan(.x) | .x == -Inf | .x == Inf, NA, .x)))
desc_stats_check <- desc_stats_check %>%
mutate(
var = case_when(
var == "A2_4" ~ "primary_salary",
var == "A3_5" ~ "secondary_salary",
var == "H4_2" ~ "candle_exp",
var == "H5_4" ~ "biomass_exp",
var == "H6_2" ~ "kerosene_exp",
var == "B4_1" ~ "energy_reliability",
var == "B4_2" ~ "energy_efficiency",
var == "B4_3" ~ "energy_accessibility",
var == "B4_4" ~ "light_accessibility",
var == "B4_5" ~ "service_satisfaction",
var == "B4_6" ~ "anxiety_energy",
var == "B4_7" ~ "energy_challenges",
var == "B4_8" ~ "energy_peace_mind",
var == "B5_1" ~ "personal_ladder",
var == "B5_2" ~ "ladder_year_back",
var == "B5_3" ~ "financial_situation",
var == "B5_4" ~ "cooking_ladder",
var == "B5_5" ~ "mobile_ladder",
var == "B5_6" ~ "lighting_ladder",
var == "B5_7" ~ "energy_satisfaction",
var == "B5_8" ~ "energy_general",
var == "J1_final" ~ "wtp_fixed",
var == "J2_1" ~ "wtp_fixed_appliance",
var == "J3_1" ~ "wtp_fixed_low_reliability",
var == "J4_2" ~ "wtp_paygo_12",
var == "J5_2" ~ "wtp_paygo_24",
var == "J6_1" ~ "wtp_lightbulb",
var == "E2_3" ~ "formal_savings",
var == "E3_3" ~ "informal_savings",
var == "I4_1" ~ "fuel_prep_women",
var == "I4_2" ~ "fuel_prep_men",
TRUE ~ var  # Retain original name if no match
)
)
desc_stats_check <- as.data.frame(desc_stats_check)
#Export Data ----
hfc_sheet %>%
sheet_write(data = desc_stats_check, sheet = "desc_stats_data")
1
four_scope<- read_xlsx(path ="C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/datawork/RCT_data/baseline/data/Updated scope villages& households/scope_193_0807.xlsx")
treatment <- four_scope %>%
select(village_id, treat) %>%
mutate(village_id = as.numeric(village_id))
treatment_summary <- left_join(hfc_constr, treatment, by = c("village" = "village_id"))
treatment_summary <- hfc_constr %>%
group_by(treat) %>%
summarize(
across(
all_of(desc_stats_variables),
~ mean(.x, na.rm = TRUE)
)
) %>%
pivot_longer(
cols = -treat,
names_to = "var",
values_to = "mean"
) %>%
mutate(
var = case_when(
var == "A2_4" ~ "primary_salary",
var == "A3_5" ~ "secondary_salary",
var == "H4_2" ~ "candle_exp",
var == "H5_4" ~ "biomass_exp",
var == "H6_2" ~ "kerosene_exp",
var == "B4_1" ~ "energy_reliability",
var == "B4_2" ~ "energy_efficiency",
var == "B4_3" ~ "energy_accessibility",
var == "B4_4" ~ "light_accessibility",
var == "B4_5" ~ "service_satisfaction",
var == "B4_6" ~ "anxiety_energy",
var == "B4_7" ~ "energy_challenges",
var == "B4_8" ~ "energy_peace_mind",
var == "B5_1" ~ "personal_ladder",
var == "B5_2" ~ "ladder_year_back",
var == "B5_3" ~ "financial_situation",
var == "B5_4" ~ "cooking_ladder",
var == "B5_5" ~ "mobile_ladder",
var == "B5_6" ~ "lighting_ladder",
var == "B5_7" ~ "energy_satisfaction",
var == "B5_8" ~ "energy_general",
var == "J1_final" ~ "wtp_fixed",
var == "J2_1" ~ "wtp_fixed_appliance",
var == "J3_1" ~ "wtp_fixed_low_reliability",
var == "J4_2" ~ "wtp_paygo_12",
var == "J5_2" ~ "wtp_paygo_24",
var == "J6_1" ~ "wtp_lightbulb",
var == "E2_3" ~ "formal_savings",
var == "E3_3" ~ "informal_savings",
var == "I4_1" ~ "fuel_prep_women",
var == "I4_2" ~ "fuel_prep_men",
TRUE ~ var  # Retain original name if no match
)
) %>%
pivot_wider(
names_from = "treat",
values_from = "mean"
)
four_scope<- read_xlsx(path ="C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/datawork/RCT_data/baseline/data/Updated scope villages& households/scope_193_0807.xlsx")
treatment <- four_scope %>%
select(village_id, treat) %>%
mutate(village_id = as.numeric(village_id))
treatment_summary <- left_join(hfc_constr, treatment, by = c("village" = "village_id"))
treatment_summary <- hfc_constr %>%
group_by(treat) %>%
summarize(
across(
all_of(desc_stats_variables),
~ mean(.x, na.rm = TRUE)
)
)
View(treatment_summary)
treatment_summary <- treatment_summary %>%
group_by(treat) %>%
summarize(
across(
all_of(desc_stats_variables),
~ mean(.x, na.rm = TRUE)
)
) %>%
pivot_longer(
cols = -treat,
names_to = "var",
values_to = "mean"
) %>%
mutate(
var = case_when(
var == "A2_4" ~ "primary_salary",
var == "A3_5" ~ "secondary_salary",
var == "H4_2" ~ "candle_exp",
var == "H5_4" ~ "biomass_exp",
var == "H6_2" ~ "kerosene_exp",
var == "B4_1" ~ "energy_reliability",
var == "B4_2" ~ "energy_efficiency",
var == "B4_3" ~ "energy_accessibility",
var == "B4_4" ~ "light_accessibility",
var == "B4_5" ~ "service_satisfaction",
var == "B4_6" ~ "anxiety_energy",
var == "B4_7" ~ "energy_challenges",
var == "B4_8" ~ "energy_peace_mind",
var == "B5_1" ~ "personal_ladder",
var == "B5_2" ~ "ladder_year_back",
var == "B5_3" ~ "financial_situation",
var == "B5_4" ~ "cooking_ladder",
var == "B5_5" ~ "mobile_ladder",
var == "B5_6" ~ "lighting_ladder",
var == "B5_7" ~ "energy_satisfaction",
var == "B5_8" ~ "energy_general",
var == "J1_final" ~ "wtp_fixed",
var == "J2_1" ~ "wtp_fixed_appliance",
var == "J3_1" ~ "wtp_fixed_low_reliability",
var == "J4_2" ~ "wtp_paygo_12",
var == "J5_2" ~ "wtp_paygo_24",
var == "J6_1" ~ "wtp_lightbulb",
var == "E2_3" ~ "formal_savings",
var == "E3_3" ~ "informal_savings",
var == "I4_1" ~ "fuel_prep_women",
var == "I4_2" ~ "fuel_prep_men",
TRUE ~ var  # Retain original name if no match
)
) %>%
pivot_wider(
names_from = "treat",
values_from = "mean"
)
View(treatment_summary)
desc_stats_check <- left_join(desc_stats_check, by = c("var"))
desc_stats_check <- left_join(desc_stats_check, treatment_summary, by = c("var" ))
hfc_sheet %>%
sheet_write(data = desc_stats_check, sheet = "desc_stats_data")
1
district_completion <- hfc_constr %>%
group_by(district_key) %>%
summarise(
attempt = n(),
complete = sum(finish == 1),
no_complete = sum(finish == 0),
consent = sum(consent == 1),
no_consent = sum(consent == 0),
completion_rate = paste0(round(complete / attempt, 3) * 100, "%"),
consent_rate = paste0(round(consent / attempt, 3) * 100, "%")
) %>%
ungroup()
View(district_completion)
district_completion <- hfc_constr %>%
group_by(district_key) %>%
summarise(
attempt = n(),
complete = sum(finish == 1),
no_complete = sum(finish == 0),
consent = sum(consent == 1, na.rm = TRUE),
no_consent = sum(consent == 0, na.rm = TRUE),
completion_rate = paste0(round(complete / attempt, 3) * 100, "%"),
consent_rate = paste0(round(consent / attempt, 3) * 100, "%")
) %>%
ungroup()
admin_district <- admin_raw %>%
group_by(
districtid_key, district_key
) %>%
summarise(
num_to_survey = sum(num_to_survey)
)
district_check <- left_join(admin_district, district_completion, by = c("district_key"))
district_check <- district_check%>%
mutate(
progress = paste0(round(complete / num_to_survey, 3) * 100, "%")
) %>%
left_join(district_check_by_day)
# saving output
hfc_sheet %>%
sheet_write(data = district_check, sheet = "district_data")
1
View(district_check)
View(admin_district)
View(district_completion)
district_check <- left_join(admin_district, district_completion, by = c("district_key"))
View(district_check)
district_completion <- hfc_constr %>%
group_by(district_key) %>%
summarise(
attempt = n(),
complete = sum(finish == 1),
no_complete = sum(finish == 0),
consent = sum(consent == 1, na.rm = TRUE),
no_consent = sum(consent == 0, na.rm = TRUE),
completion_rate = paste0(round(complete / attempt, 3) * 100, "%"),
consent_rate = paste0(round(consent / attempt, 3) * 100, "%")
) %>%
ungroup()
admin_district <- admin_raw %>%
group_by(
districtid_key, district_key
) %>%
summarise(
num_to_survey = sum(num_to_survey)
)
district_check <- left_join(admin_district, district_completion, by = c("district_key"))
district_check <- left_join(district_completion,admin_district, by = c("district_key"))
district_completion <- hfc_constr %>%
group_by(districtid_key) %>%
summarise(
attempt = n(),
complete = sum(finish == 1),
no_complete = sum(finish == 0),
consent = sum(consent == 1, na.rm = TRUE),
no_consent = sum(consent == 0, na.rm = TRUE),
completion_rate = paste0(round(complete / attempt, 3) * 100, "%"),
consent_rate = paste0(round(consent / attempt, 3) * 100, "%")
) %>%
ungroup()
admin_district <- admin_raw %>%
group_by(
districtid_key, district_key
) %>%
summarise(
num_to_survey = sum(num_to_survey)
)
district_check <- left_join(district_completion,admin_district, by = c("districtid_key"))
district_check <- district_check%>%
select(districtid_Key, district_key, everything())
district_check <- district_check%>%
select(districtid_key, district_key, everything()) %>%
mutate(
progress = paste0(round(complete / num_to_survey, 3) * 100, "%")
) %>%
left_join(district_check_by_day)
# 3. District----
##Submission by day----
district_check_by_day <- hfc_constr %>%
group_by(districtid_key, submissiondate) %>%
summarize(
num_surveys = n()
) %>%
ungroup() %>%
pivot_wider(
names_from = submissiondate,
values_from = num_surveys
) %>%
mutate(across(
-district_key,
~ ifelse(is.na(.x), 0, .x)
)) %>%
select(district_key, order(colnames(.)))
# 3. District----
##Submission by day----
district_check_by_day <- hfc_constr %>%
group_by(districtid_key, submissiondate) %>%
summarize(
num_surveys = n()
) %>%
ungroup() %>%
pivot_wider(
names_from = submissiondate,
values_from = num_surveys
) %>%
mutate(across(
-district_key,
~ ifelse(is.na(.x), 0, .x)
)) %>%
select(districtid_key, order(colnames(.)))
# 3. District----
##Submission by day----
district_check_by_day <- hfc_constr %>%
group_by(districtid_key, submissiondate) %>%
summarize(
num_surveys = n()
) %>%
ungroup() %>%
pivot_wider(
names_from = submissiondate,
values_from = num_surveys
) %>%
mutate(across(
-districtid_key,
~ ifelse(is.na(.x), 0, .x)
)) %>%
select(districtid_key, order(colnames(.)))
district_check <- left_join(district_completion,admin_district, by = c("districtid_key"))
district_check <- district_check%>%
select(districtid_key, district_key, everything()) %>%
mutate(
progress = paste0(round(complete / num_to_survey, 3) * 100, "%")
) %>%
left_join(district_check_by_day)
# saving output
hfc_sheet %>%
sheet_write(data = district_check, sheet = "district_data")
1
district_check <- district_check%>%
select(districtid_key, district_key, num_to_survey, everything()) %>%
mutate(
progress = paste0(round(complete / num_to_survey, 3) * 100, "%")
) %>%
left_join(district_check_by_day) %>%
select()
district_check <- district_check%>%
select(districtid_key, district_key, num_to_survey, everything()) %>%
mutate(
progress = paste0(round(complete / num_to_survey, 3) * 100, "%")
) %>%
left_join(district_check_by_day)
district_check <- left_join(district_completion,admin_district, by = c("districtid_key"))
district_check <- district_check%>%
select(districtid_key, district_key, num_to_survey, everything()) %>%
mutate(
progress = paste0(round(complete / num_to_survey, 3) * 100, "%")
) %>%
left_join(district_check_by_day)
# saving output
hfc_sheet %>%
sheet_write(data = district_check, sheet = "district_data")
1
