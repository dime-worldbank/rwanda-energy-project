"ends_with("duration")",
View(hfc_constr)
outlier_variables <- c(
"A1_1", #household size
"H4_2", "H5_4", "H6_2", "H8_7", #energy spending and lightbulb usage
"J1_final", "J2_1", "J3_1", "J4_2", "J5_2", #WTP
"F1_1" #mobile phone ownership
)
# Note â€” This can also be done by running:
#   outlier_variables <- survey_data %>%
#       select(
#           starts_with("inc_"), starts_with("crp10a_c1_")
#       ) %>%
#       names()
##Check for variables outside of expected range----
outlier_check <- outlier_variables %>%
map_dfr(
~ hfc_constr %>%
mutate(
across(
matches(.x), ~ mean(.x, na.rm = TRUE), .names = "mean"
),
across(
matches(.x), ~ sd(.x, na.rm = TRUE), .names = "sd"
),
low_limit  = mean - 3 * sd,
high_limit = mean + 3 * sd
) %>%
filter(
!!sym(.x) < low_limit | !!sym(.x) > high_limit
) %>%
mutate(
issue_var = .x,
across(
mean:high_limit, ~ round(.x, digits = 0)
)
) %>%
select(
hh_id, village, enumerator, enumerator_key, issue_var, value = matches(.x), mean, sd, low_limit, high_limit #might need to add village_key
)
)
outlier_check <- outlier_check %>%
rename(
n_tablet = F1_1,
wtp_fixed = J1_final,
wtp_add_appliance = J2_1,
wtp_low_stability = J3_1,
wtp_paygo_12 = J4_2,
wtp_pay_24 = J5_2,
candle_spending = H4_2,
biomass_spending = H5_4,
kerosene_spending = H6_2,
n_lightbulb = H8_7
)
View(outlier_check)
?case_when()
outlier_check <- outlier_check %>%
mutate(
issue_var = case_when(
"F1_1" ~ "n_tablet",
"J1_final" ~ "wtp_fixed",
"J2_1" ~ "wtp_add_appliance",
"J3_1" ~ "wtp_low_stability",
"J4_2" ~ "wtp_paygo_12",
"J5_2" ~ "wtp_pay_24",
"H4_2" ~ "candle_spending",
"H5_4" ~ "biomass_spending",
"H6_2" ~ "kerosene_spending",
"H8_7" ~ "n_lightbulb",
.default = NULL
)
)
outlier_check <- outlier_check %>%
mutate(
issue_var = case_when(
issue_var == "F1_1" ~ "n_tablet",
issue_var == "J1_final" ~ "wtp_fixed",
issue_var == "J2_1" ~ "wtp_add_appliance",
issue_var == "J3_1" ~ "wtp_low_stability",
issue_var == "J4_2" ~ "wtp_paygo_12",
issue_var == "J5_2" ~ "wtp_pay_24",
issue_var == "H4_2" ~ "candle_spending",
issue_var == "H5_4" ~ "biomass_spending",
issue_var == "H6_2" ~ "kerosene_spending",
issue_var == "H8_7" ~ "n_lightbulb",
TRUE ~ NA_character_
)
)
#Export Data
hfc_sheet %>%
sheet_write(data = outlier_check, sheet = "outlier_data")
# In case googlesheets4 asks me to enter '1' to continue
1
formdef_check <- hfc_constr %>%
filter(formdef_version != "") %>%
mutate(issue = "Enumerator used old survey version") %>%
select(hh_id, issue)
#2. Electrification check----
elec_check <- hfc_constr %>%
filter( A1_2 != H1_1 | A1_3 != H2_1 | H8_6 != C3_14 ) %>%
mutate(issue = "Electrification status & lightbulb unmatch") %>%
select(hh_id, issue)
formdef_check <- hfc_constr %>%
filter(formdef_version != "2024041701") %>%
mutate(issue = "Enumerator used old survey version") %>%
select(hh_id, issue)
View(formdef_check)
elec_check <- hfc_constr %>%
filter( A1_2 != H1_1 | A1_3 != H2_1 | H8_6 != C3_14 ) %>%
mutate(issue = "Electrification status & lightbulb unmatch") %>%
select(hh_id, issue)
#3. Start/End/Submission Date Discrepancies----
start_end_check <- hfc_constr %>%
filter(startdate != enddate) %>%
mutate(issue = "End of survey date is different from start of survey date") %>%
select(hh_id, issue) # calculate this
end_submission_check <- hfc_constr %>%
filter(enddate != submissiondate) %>%
mutate(issue = "Submission date is different from end of survey date") %>%
select(hh_id, issue) #
#4. Check for Modules with Negative Durations (i.e. end_mod was recorded before start_mod)----
negative_length_check <- hfc_constr %>%
filter(negative_durs > 0) %>%
mutate(issue = "This survey has one or more negative/no durations") %>%
select(hh_id, issue) #,negative_mods
negative_length_check <- hfc_constr %>%
filter(negative_duration > 0) %>%
mutate(issue = "This survey has one or more negative/no durations") %>%
select(hh_id, issue) #,negative_mods
high_length_check <- hfc_constr %>%
group_by(ID_05) %>%
mutate(
duration = sum(survey_duration, na.rm = TRUE),
n_subs   = row_number()
) %>%
filter(n_subs == max(n_subs, na.rm = TRUE)) %>%
ungroup() %>%
select(-n_subs) %>%
filter(survey_duration > 180) %>%
mutate(issue = "Survey total duration is greater than 3 hours") %>%
select(hh_id, issue) #,negative_mods
high_length_check <- hfc_constr %>%
group_by(hh_id) %>%
mutate(
duration = sum(survey_duration, na.rm = TRUE),
n_subs   = row_number()
) %>%
filter(n_subs == max(n_subs, na.rm = TRUE)) %>%
ungroup() %>%
select(-n_subs) %>%
filter(survey_duration > 180) %>%
mutate(issue = "Survey total duration is greater than 3 hours") %>%
select(hh_id, issue) #,negative_mods
#6.Check for low Survey Length----
low_length_check <- hfc_constr%>%
group_by(hh_id) %>%
mutate(
duration = sum(survey_duration, na.rm = TRUE),
n_subs   = row_number()
) %>%
filter(n_subs == max(n_subs, na.rm = TRUE)) %>%
ungroup() %>%
select(-n_subs) %>%
filter(survey_duration < 60) %>%
mutate(issue = "Survey total duration is less than 1 hour") %>%
select(hh_id,issue)
logic_check <- rbind(formdef_check, elec_check, start_end_check, end_submission_check, negative_length_check, low_length_check, high_length_check)
logic_check <- left_join(hfc_constr, logic_check, by = c("hh_id"))
logic_check <- logic_check %>%
select(
hh_id, village, village_key, enumerator, startdate, enddate, submissiondate,issue, endsWith("duration"), A1_2, H1_1, A1_3, H2_1, H8_6, C3_14, formdef_version
) %>%
rename(
grid_1 = A1_2,
grid_2 = H1_1,
offgrid_1 = A1_3,
offgrid_2 = H2_1,
lightbulb_1 = H8_6,
lightbulb_2 = C3_14
)
logic_check <- logic_check %>%
select(
hh_id, village, village_key, enumerator, startdate, enddate, submissiondate,issue, ends_with("duration"), A1_2, H1_1, A1_3, H2_1, H8_6, C3_14, formdef_version
) %>%
rename(
grid_1 = A1_2,
grid_2 = H1_1,
offgrid_1 = A1_3,
offgrid_2 = H2_1,
lightbulb_1 = H8_6,
lightbulb_2 = C3_14
)
View(logic_check)
hfc_sheet %>%
sheet_write(data = logic_check, sheet = "logic_data")
1
desc_stats_variables <- c(
"A2_4", #primary occupation salary
"A3_5", #secondary occupation salary
"H4_2", #candle expenditure
"H5_4", #biomass expenditure
"H6_2", #kerosene
"B4_1", #energy reliability
"B4_2", #energy efficiency
"B4_3", #energy accessibility
"B4_4", #light accessbility
"B4_5", #energy service satisfaction
"B4_6", #anxiety related to energy
"B4_7", #energy challenges
"B4_8", #energy and peace of mind
"B5_1", #personal ladder
"B5_2", #ladder one year back
"B5_3", #financial situation
"B5_4", #cooking ladder
"B5_5", #mobile phone charging ladder
"B5_6", #lighting ladder
"B5_7", #energy satisfaction
"B5_8", #energy general
"J1_final", #wtp_fixed
"J2_1", #wtp_fixed_appliance
"J3_1", #wtp_fixed_low_reliability
"J4_2", #wtp_paygo_12
"J5_2", #wtp_paygo_24
"J6_1", #wtp_lightbulb
"J6_2", #wtp_lightbulbhour
"J6_3", #wtp_lightbulbdays
"E2_3", #formal savings
"E3_3", #informal savings
"F1_6", #7days_airtime
"F1_7", #30days_airtime
"F1_8", #7days_data
"F1_9", #30days_data
"I4_1", #fuel preparation women
"I4_2", #fuel preparation men
#general wellbeing
#social desirability
)
desc_stats_variables <- c(
"A2_4", #primary occupation salary
"A3_5", #secondary occupation salary
"H4_2", #candle expenditure
"H5_4", #biomass expenditure
"H6_2", #kerosene
"B4_1", #energy reliability
"B4_2", #energy efficiency
"B4_3", #energy accessibility
"B4_4", #light accessbility
"B4_5", #energy service satisfaction
"B4_6", #anxiety related to energy
"B4_7", #energy challenges
"B4_8", #energy and peace of mind
"B5_1", #personal ladder
"B5_2", #ladder one year back
"B5_3", #financial situation
"B5_4", #cooking ladder
"B5_5", #mobile phone charging ladder
"B5_6", #lighting ladder
"B5_7", #energy satisfaction
"B5_8", #energy general
"J1_final", #wtp_fixed
"J2_1", #wtp_fixed_appliance
"J3_1", #wtp_fixed_low_reliability
"J4_2", #wtp_paygo_12
"J5_2", #wtp_paygo_24
"J6_1", #wtp_lightbulb
"J6_2", #wtp_lightbulbhour
"J6_3", #wtp_lightbulbdays
"E2_3", #formal savings
"E3_3", #informal savings
"F1_6", #7days_airtime
"F1_7", #30days_airtime
"F1_8", #7days_data
"F1_9", #30days_data
"I4_1", #fuel preparation women
"I4_2" #fuel preparation men
#general wellbeing
#social desirability
)
desc_stats_labels <- c(
"A2_4" = "primary_salary",
"A3_5" = "secondary_salary",
"H4_2"= "candle_exp",
"H5_4" = "biomass_exp",
"H6_2" = "kerosene_exp",
"B4_1" = "energy_reliability",
"B4_2" = "energy_efficiency",
"B4_3" = "energy_accessibility",
"B4_4" = "light_accessbility",
"B4_5" = "service_satisfaction",
"B4_6" = "anxiety_energy",
"B4_7" = "energy_challenges",
"B4_8" = "energy_peace_mind",
"B5_1" = "personal_ladder",
"B5_2" = "ladder_year_back",
"B5_3" = "financial_situation",
"B5_4" = "cooking _ladder",
"B5_5" = "mobile_ladder",
"B5_6" = "lighting_ladder",
"B5_7" = "energy_satisfaction",
"B5_8"= "energy_general",
"J1_final"= "wtp_fixed",
"J2_1" = "wtp_fixed_appliance",
"J3_1" = "wtp_fixed_low_reliability",
"J4_2" = "wtp_paygo_12",
"J5_2" = "wtp_paygo_24",
"J6_1" = "wtp_lightbulb",
"J6_2"= "wtp_lightbulbhour",
"J6_3" = "wtp_lightbulbdays",
"E2_3" = "formal_savings",
"E3_3" = "informal_savings",
"F1_6" = "7days_airtime",
"F1_7" = "30days_airtime",
"F1_8" = "7days_data",
"F1_9" = "30days_data",
"I4_1" = "fuel_prep_women",
"I4_2" = "fuel_prep_men"
)
desc_stats_check <- hfc_constr %>%
summarize(
across(
all_of(desc_stats_variables),
list(
mean     = ~ mean(.x, na.rm = TRUE),
sd       = ~ sd(.x, na.rm = TRUE),
min      = ~ min(.x, na.rm = TRUE),
max      = ~ max(.x, na.rm = TRUE),
median   = ~ median(.x, na.rm = TRUE)
)
)
) %>%
pivot_longer(
cols          = everything(),
names_to      = c("var", "stat"),
names_pattern = "^(.*)_(mean|sd|min|max|median)$"
) %>%
pivot_wider(
names_from  = "stat",
values_from = "value"
) %>%
mutate(
var = desc_stats_labels[var],
across(
mean:median, ~ round(.x, digits = 3)
)
)
desc_stats_variables <- c(
"A2_4", #primary occupation salary
"A3_5", #secondary occupation salary
"H4_2", #candle expenditure
"H5_4", #biomass expenditure
"H6_2", #kerosene
"B4_1", #energy reliability
"B4_2", #energy efficiency
"B4_3", #energy accessibility
"B4_4", #light accessbility
"B4_5", #energy service satisfaction
"B4_6", #anxiety related to energy
"B4_7", #energy challenges
"B4_8", #energy and peace of mind
"B5_1", #personal ladder
"B5_2", #ladder one year back
"B5_3", #financial situation
"B5_4", #cooking ladder
"B5_5", #mobile phone charging ladder
"B5_6", #lighting ladder
"B5_7", #energy satisfaction
"B5_8", #energy general
"J1_final", #wtp_fixed
"J2_1", #wtp_fixed_appliance
"J3_1", #wtp_fixed_low_reliability
"J4_2", #wtp_paygo_12
"J5_2", #wtp_paygo_24
"J6_1", #wtp_lightbulb
"J6_2", #wtp_lightbulbhour
"J6_3", #wtp_lightbulbdays
"E2_3", #formal savings
"E3_3", #informal savings
"I4_1", #fuel preparation women
"I4_2" #fuel preparation men
#general wellbeing
#social desirability
)
desc_stats_labels <- c(
"A2_4" = "primary_salary",
"A3_5" = "secondary_salary",
"H4_2"= "candle_exp",
"H5_4" = "biomass_exp",
"H6_2" = "kerosene_exp",
"B4_1" = "energy_reliability",
"B4_2" = "energy_efficiency",
"B4_3" = "energy_accessibility",
"B4_4" = "light_accessbility",
"B4_5" = "service_satisfaction",
"B4_6" = "anxiety_energy",
"B4_7" = "energy_challenges",
"B4_8" = "energy_peace_mind",
"B5_1" = "personal_ladder",
"B5_2" = "ladder_year_back",
"B5_3" = "financial_situation",
"B5_4" = "cooking _ladder",
"B5_5" = "mobile_ladder",
"B5_6" = "lighting_ladder",
"B5_7" = "energy_satisfaction",
"B5_8"= "energy_general",
"J1_final"= "wtp_fixed",
"J2_1" = "wtp_fixed_appliance",
"J3_1" = "wtp_fixed_low_reliability",
"J4_2" = "wtp_paygo_12",
"J5_2" = "wtp_paygo_24",
"J6_1" = "wtp_lightbulb",
"J6_2"= "wtp_lightbulbhour",
"J6_3" = "wtp_lightbulbdays",
"E2_3" = "formal_savings",
"E3_3" = "informal_savings",
"I4_1" = "fuel_prep_women",
"I4_2" = "fuel_prep_men"
)
desc_stats_check <- hfc_constr %>%
summarize(
across(
all_of(desc_stats_variables),
list(
mean     = ~ mean(.x, na.rm = TRUE),
sd       = ~ sd(.x, na.rm = TRUE),
min      = ~ min(.x, na.rm = TRUE),
max      = ~ max(.x, na.rm = TRUE),
median   = ~ median(.x, na.rm = TRUE)
)
)
) %>%
pivot_longer(
cols          = everything(),
names_to      = c("var", "stat"),
names_pattern = "^(.*)_(mean|sd|min|max|median)$"
) %>%
pivot_wider(
names_from  = "stat",
values_from = "value"
) %>%
mutate(
var = desc_stats_labels[var],
across(
mean:median, ~ round(.x, digits = 3)
)
)
View(desc_stats_check)
hfc_sheet %>%
sheet_write(data = desc_stats, sheet = "desc_stats_data")
hfc_sheet %>%
sheet_write(data = desc_stats_check, sheet = "desc_stats_data")
hfc_sheet %>%
sheet_write(data = desc_stats_check, sheet = "desc_stats_data")
desc_stats_check <- as.data.frame(desc_stats_check)
hfc_sheet %>%
sheet_write(data = desc_stats_check, sheet = "desc_stats_data")
1
village <- read.csv(file.path(
data_path, "admin_raw.csv"
))
village<- village %>%
select( ends_with("key"))
View(village)
View(hfc_constr)
duration_mods <- hfc_constr %>%
select(SubmissionDate, district, district_key, sector, sector_key, cell, cell_key, village, village_key, enumerator, enumerator_key,  enumerator_other, ends_with("duration"), negative_mods) %>% #This is adding household ID number
arrange(SubmissionDate)
View(duration_mods)
hfc_sheet %>%
sheet_write(data = duration_mods, sheet = "duration_data")
# In case googlesheets4 asks me to enter '1' to continue
1
hfc_constr <- raw %>%
filter(starttime >= as.Date("2024-03-2"))
hfc_constr <- raw %>%
filter(starttime >= as.Date("2024-03-20"))
hfc_code_filepath <- "C:/Users/wb614406/github/rwanda-energy-project/RCT_data/baseline/HFC/scripts/"
source(paste0(hfc_code_filepath,   "2.hfc_construct.R"))
source(paste0(hfc_code_filepath,   "2.hfc_construct.R"))
source(paste0(hfc_code_filepath,   "2.hfc_construct.R"))
1
1
duplicates <- hfc_constr %>%
filter(consent==1) %>%
group_by(hh_id) %>%  #household id
mutate(n=n()) %>%
filter(n>1) %>%
select(enumerator,enumerator_key,district, district_key, sector, sector_key, cell, cell_key, village, village_key, hh_id, hh_id_confirm,
starttime, submissiondate, n) %>%
filter(!is.na(hh_id_confirm))
hfc_sheet %>%
sheet_write(data = duplicates, sheet = "duplicates")
1
#
source(paste0(hfc_code_filepath,   "3.hfc_admin.R"))
source(paste0(hfc_code_filepath,   "3.hfc_admin.R"))
source(paste0(hfc_code_filepath,   "3.hfc_admin.R"))
# In case googledrive and googlesheets4 packages ask for '1' to confirm account re-authentication
1
1
source(paste0(hfc_code_filepath,   "4.hfc_enum.R"))
1
print("Script 4 Done.")
source(paste0(hfc_code_filepath,   "5.hfc_outliers.R"))
1
print("Script 5 Done.")
source(paste0(hfc_code_filepath,   "6.hfc_logic.R"))
1
print("Script 6 Done.")
source(paste0(hfc_code_filepath,   "8.hfc_stats.R"))
source(paste0(hfc_code_filepath,   "7.hfc_stats.R"))
1
print("Script 8 Done.")
