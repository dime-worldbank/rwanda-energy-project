sum(village_2017$total_employee, na.rm = TRUE)
sum(village_2020$total_employee, na.rm = TRUE)
#Join----
key_2011 <-village_2011%>%
select(village_id, num_establishment,total_employee, employed_capital_1, employed_capital_2, employed_capital_3, employed_capital_4) %>%
mutate(
year = 2011
)
key_2014 <-village_2014%>%
select(village_id,num_establishment, total_employee, employed_capital_1, employed_capital_2, employed_capital_3, employed_capital_4) %>%
mutate(
year = 2014
)
key_2017 <-village_2017%>%
select(village_id,num_establishment, total_employee, employed_capital_1, employed_capital_2, employed_capital_3, employed_capital_4) %>%
mutate(
year = 2017
)
key_2020 <-village_2020%>%
select(village_id, num_establishment,total_employee, employed_capital_1, employed_capital_2, employed_capital_3, employed_capital_4) %>%
mutate(
year = 2020
)
key_all <- bind_rows(key_2011, key_2014, key_2017, key_2020)
key_all <- key_all %>%
mutate(village_id = as.character(village_id)) %>%
filter(village_id %in% rwa_long$village_id)
rwa_regress_join <- full_join(rwa_long, key_all, by = c("village_id", "year"))
rwa_regress <- rwa_regress_join %>%
filter(! district %in% c("Ngororero", "Nyabihu", "Nyamasheke", "Rubavu")) %>%
mutate(
always_elec = ifelse((year_first <= 2011), 1, 0),
elec12_14 = ifelse((year_first <= 2014 & year_first >= 2012), 1, 0),
elec15_17 = ifelse((year_first <= 2017 & year_first >= 2015), 1, 0),
elec18_20 = ifelse((year_first <= 2020 & year_first >= 2018), 1, 0),
never_elec = ifelse((year_first == 2300|is.na(year_first)), 1, 0)
)  %>%
filter(
year == 2011 | year == 2014 | year == 2017 |year == 2020
) %>%
mutate(
total_employee = ifelse(is.na(total_employee), 0, total_employee),
employed_capital_1 = ifelse(is.na(employed_capital_1), 0, employed_capital_1),
employed_capital_2 = ifelse(is.na(employed_capital_2), 0, employed_capital_2),
employed_capital_3 = ifelse(is.na(employed_capital_3), 0, employed_capital_3),
employed_capital_4 = ifelse(is.na(employed_capital_4), 0, employed_capital_4),
num_establishment = ifelse(is.na(num_establishment), 0, num_establishment)
) %>%
mutate(
distr_year = paste0(Distr_ID, "_", year),
sector_year = paste0(Sector_ID, "_", year)
) %>%
clean_names()
#Balance table----
rwa_bt <- rwa_regress %>%
mutate(
status = case_when(
year_first <= 2011 ~ "always_elec",
year_first <= 2014 & year_first >= 2012 ~ "elec12_14",
year_first <= 2017 & year_first >= 2015 ~ "elec15_17",
year_first <= 2020 & year_first >= 2018 ~ "elec18_20",
year_first <= 2022 & year_first >= 2021 ~ "elec21_22",
year_first == 2300 | is.na(year_first) ~ "never_elec",
)
)
rwa_bt_selec <- rwa_bt %>%
select(
status, value, usage, num_establishment, total_employee, employed_capital_1, employed_capital_2, employed_capital_3, employed_capital_4
)
rwa_bar <- rwa_bt %>%
group_by(year, status) %>%
summarise(
n = num_establishment
)
View(rwa_bt_selec)
View(rwa_bar)
rwa_bar <- rwa_bt %>%
group_by(year, status) %>%
summarise(
n = sum(num_establishment)
)
ggplot(rwa_bar, aes(x = factor(year), y = n, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Year", y = "Number of Establishments", fill = "Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Annual Establishments by Status")
ggplot(rwa_bar, aes(x = factor(year), y = n, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = n),
position = position_dodge(width = 0.9),
vjust = -0.3, size = 3.5) + # Adjust size for readability
labs(x = "Year", y = "Number of Establishments", fill = "Status") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
plot.title = element_text(size = 18)
) +
ggtitle("Annual Establishments by Status")
ggplot(rwa_bar, aes(x = factor(year), y = n, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = n),
position = position_dodge(width = 0.9),
vjust = -0.3, size = 3.5) + # Adjust size for readability
labs(x = "Year", y = "Number of Establishments", fill = "Status") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 18),
axis.text.y = element_text(size = 18),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
plot.title = element_text(size = 18)
) +
ggtitle("Annual Establishments by Electrification Year")
rwa_villages <- read_xlsx(path = file.path(data_path, "rwa_villages", "Village.shp"))
rwa_villages <- read_xlsx(path = file.path(data_path, "rwa_villages", "Village.shp"))
rwa_villages <- st_read(dsn = file.path(data_path, "rwa_villages", "Village.shp"))
village_join <- rwa_villages %>%
st_drop_geometry()
rwa_bt_selec <- left_join(rwa_bt_selec, village_join, by = c("village_id" = "Village_ID"))
rwa_bt_selec <- rwa_bt %>%
select(
village_id, status, value, usage, num_establishment, total_employee, employed_capital_1, employed_capital_2, employed_capital_3, employed_capital_4
)
rwa_bt_selec <- left_join(rwa_bt_selec, village_join, by = c("village_id" = "Village_ID"))
write_dta(rwa_bt_selec, path = file.path(data_path, "Establishment census", "balance_table.dta"))
balance_table(rwa_bt_selec, "status", "Balance table")
balance_table<-function(data, treatment, caption) {
variables<-NULL
data <- data %>% dplyr::arrange(!!rlang::sym(treatment))
valores_trat <- base::unique(dplyr::pull(data, !!rlang::sym(treatment)))
trats<-valores_trat[2:base::length(valores_trat)]
bal_tables<-purrr::map(trats, function (x)
data %>%
dplyr::filter(!!rlang::sym(treatment) == valores_trat[1] | !!rlang::sym(treatment) ==  !!x))
bal_tables<-purrr::map(bal_tables, function (x) x %>%
tidyr::pivot_longer(names_to = "variables", values_to = "value", -treatment) )
# Creo por separado la primera para poner la mean de control
bal_tables<-purrr::map(bal_tables, function(x) x %>%
dplyr::group_by(variables) %>%
dplyr::summarise(mean_control = stats::t.test(value~!!rlang::sym(treatment))$estimate[1],
mean_trat = stats::t.test(value~!!rlang::sym(treatment))$estimate[2],
p_value = stats::t.test(value~!!rlang::sym(treatment))$p.value))
valores_trat<-base::as.character(valores_trat[2:base::length(valores_trat)])
bal_tables <- purrr::map2_dfc(.x = bal_tables, .y = valores_trat,
function(x,y) dplyr::rename_all(x, ~stringr::str_c(., y)))
#Quedandome solo con una de variables y mean_control
means_control <- base::names(bal_tables %>% dplyr::select(dplyr::contains("control")) )
variables_nombres <- base::names(bal_tables %>% dplyr::select(dplyr::contains("variables")))
means_trat <- base::names(bal_tables %>% dplyr::select(dplyr::contains("trat")))
p_values <-base::names(bal_tables %>% dplyr::select(dplyr::contains("p_value")))
bal_tables<-
bal_tables %>%
dplyr::select(tidyselect::all_of(variables_nombres[1]),
tidyselect::all_of(means_control[1]),
tidyselect::all_of(means_trat),
tidyselect::all_of(p_values))
# Convert to data frame for kable
bal_tables_df <- as.data.frame(bal_tables)
# return(bal_tables_df)
bal_tables_df %>% dplyr::mutate_if(is.numeric, funs(as.character(signif(., 3)))) %>%
kable(bal_tables, format = "html", caption = caption) %>%
kable_styling(bootstrap_options = c("striped"),
# full_width = T,
font_size = 15) %>%
scroll_box(height = "300px")
}
balance_table(rwa_bt_selec, "status", "Balance table")
rwa_bt_selec <- rwa_bt_selec %>%
mutate(
Cell_ID = as.character(Cell_ID)
)
rwa_bt_selec <- rwa_bt_selec %>%
mutate(
Cell_ID = as.character(Cell_ID),
cell = paste0(Cell_ID, Cell)
)
rwa_bt_selec <- rwa_bt %>%
select(
village_id, status, value, usage, num_establishment, total_employee, employed_capital_1, employed_capital_2, employed_capital_3, employed_capital_4
)
rwa_bt_selec <- left_join(rwa_bt_selec, village_join, by = c("village_id" = "Village_ID"))
rwa_bt_selec <- rwa_bt_selec %>%
mutate(
Cell_ID = as.character(Cell_ID),
cell = paste0(Cell_ID, Cell)
)
View(rwa_bt_selec)
write_dta(rwa_bt_selec, path = file.path(data_path, "Establishment census", "balance_table.dta"))
rwa_bt_selec <- rwa_bt_selec %>%
mutate(
Cell_ID = as.numeric(Cell_ID),
cell = paste0(Cell_ID, Cell)
)
write_dta(rwa_bt_selec, path = file.path(data_path, "Establishment census", "balance_table.dta"))
elec_status <- rwa_long %>%
select(village_id, status) %>%
distinct(village_id, .keep_all = TRUE)
elec_status <- rwa_ BT%>%
elec_status <- rwa_bt %>%
select(village_id, status) %>%
distinct(village_id, .keep_all = TRUE)
View(elec_status)
check <- rwa_villages %>%
filter(!Village_ID %in% elec_status$village_id)
table(check$District)
rwa_villages <- st_make_valid(rwa_villages)
rwa_villages <- left_join(rwa_villages, elec_status, by = c("Village_ID" = "village_id"))
# Plot the map with ggplot2, filling by status
ggplot(data = rwa_villages) +
geom_sf(aes(fill = status)) +
scale_fill_viridis_d() +  # Optional: use a colorblind-friendly palette
theme_minimal() +
labs(
title = "Rwanda Villages by Status",
fill = "Status"
)
# Plot the map with ggplot2, filling by status
ggplot(data = rwa_villages) +
geom_sf(aes(fill = status), size = 0) +
scale_fill_viridis_d() +  # Optional: use a colorblind-friendly palette
theme_minimal() +
labs(
title = "Rwanda Villages by Status",
fill = "Status"
)
rwa_villages <- rwa_villages %>%
mutate(
status = ifelse(is.na(status), "never_elec", status)
)
r
elec_status <- rwa_long%>%
mutate(
always_elec = ifelse((year_first <= 2011), 1, 0),
elec12_14 = ifelse((year_first <= 2014 & year_first >= 2012), 1, 0),
elec15_17 = ifelse((year_first <= 2017 & year_first >= 2015), 1, 0),
elec18_20 = ifelse((year_first <= 2020 & year_first >= 2018), 1, 0),
never_elec = ifelse((year_first == 2300|is.na(year_first)), 1, 0)
)
elec_status <- rwa_long %>%
mutate(
status = case_when(
year_first <= 2011 ~ "always_elec",
year_first <= 2014 & year_first >= 2012 ~ "elec12_14",
year_first <= 2017 & year_first >= 2015 ~ "elec15_17",
year_first <= 2020 & year_first >= 2018 ~ "elec18_20",
year_first <= 2022 & year_first >= 2021 ~ "elec21_22",
year_first == 2300 | is.na(year_first) ~ "never_elec",
)
) %>%
distinct(village_id, .keep_all = TRUE)
elec_status <- elec_status %>%
select(village_id, status) %>%
distinct(village_id, .keep_all = TRUE)
rwa_villages <- left_join(rwa_villages, elec_status, by = c("Village_ID" = "village_id"))
rwa_villages <- rwa_villages %>%
mutate(
status = ifelse(is.na(status), "never_elec", status),
status = case_when(
status == "elec12_14" ~ "2012-2014",
status == "elec15_17" ~ "2015-2017",
status == "elec18_20" ~ "2018-2020",
status == "elec21_22" ~ "2021-2022",
.default = status
)
)
elec_status <- rwa_long %>%
mutate(
status = case_when(
year_first <= 2011 ~ "always_elec",
year_first <= 2014 & year_first >= 2012 ~ "elec12_14",
year_first <= 2017 & year_first >= 2015 ~ "elec15_17",
year_first <= 2020 & year_first >= 2018 ~ "elec18_20",
year_first <= 2022 & year_first >= 2021 ~ "elec21_22",
year_first == 2300 | is.na(year_first) ~ "never_elec",
)
) %>%
distinct(village_id, .keep_all = TRUE)
elec_status <- elec_status %>%
select(village_id, status) %>%
distinct(village_id, .keep_all = TRUE)
rwa_villages <- st_read(dsn = file.path(data_path, "rwa_villages", "Village.shp"))
rwa_villages <- left_join(rwa_villages, elec_status, by = c("Village_ID" = "village_id"))
rwa_villages <- st_make_valid(rwa_villages)
View(rwa_villages)
# Plot the map with ggplot2, filling by status
ggplot() +
geom_sf(data = rwa_villages, aes(fill = status), size = 0) +
scale_fill_viridis_d() +  # Optional: use a colorblind-friendly palette
theme_minimal() +
labs(
title = "Rwanda Villages by year of electrification",
fill = "Electrified year"
)
table(rwa_villages$status)
rwa_villages <- rwa_villages %>%
mutate(
status = ifelse(is.na(status), "never_elec", status),
status = case_when(
status == "elec12_14" ~ "2012-2014",
status == "elec15_17" ~ "2015-2017",
status == "elec18_20" ~ "2018-2020",
status == "elec21_22" ~ "2021-2022",
.default = status
)
)
ggplot() +
geom_sf(data = rwa_villages, aes(fill = status), color = NA) +  # Remove borders by setting color = NA
scale_fill_viridis_d() +  # Optional: use a colorblind-friendly palette
theme_minimal() +
labs(
title = "Rwanda Villages by Year of Electrification",
fill = "Electrified Year"
) +
theme(
legend.position = "right",  # Position the legend on the right
legend.title = element_text(size = 12),  # Increase legend title font size
legend.text = element_text(size = 10),  # Increase legend text font size
plot.title = element_text(size = 16)  # Increase plot title font size
)
rwa_villages$status <- factor(rwa_villages$status, levels = c("always_elec", "2012-2014", "2015-2017", "2018-2020", "2021-2022", "never_elec"))
ggplot() +
geom_sf(data = rwa_villages, aes(fill = status), color = NA) +  # Remove borders by setting color = NA
scale_fill_viridis_d() +  # Optional: use a colorblind-friendly palette
theme_minimal() +
labs(
title = "Rwanda Villages by Year of Electrification",
fill = "Electrified Year"
) +
theme(
legend.position = "right",  # Position the legend on the right
legend.title = element_text(size = 12),  # Increase legend title font size
legend.text = element_text(size = 10),  # Increase legend text font size
plot.title = element_text(size = 16)  # Increase plot title font size
)
ggplot() +
geom_sf(data = rwa_villages, aes(fill = status), color = NA) +  # Remove borders by setting color = NA
scale_fill_viridis_d() +  # Optional: use a colorblind-friendly palette
theme_void() +
theme(
plot.background = element_rect(fill = 'white', color = 'white'),
legend.margin = margin(r=10),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 20)
) +
labs(
title = "Rwanda Villages by Year of Electrification",
fill = "Electrified Year"
) +
theme(
legend.position = "right",  # Position the legend on the right
legend.title = element_text(size = 12),  # Increase legend title font size
legend.text = element_text(size = 10),  # Increase legend text font size
plot.title = element_text(size = 16)  # Increase plot title font size
)
ggplot() +
geom_sf(data = rwa_villages, aes(fill = status), color = NA) +  # Remove borders by setting color = NA
scale_fill_viridis_d() +  # Optional: use a colorblind-friendly palette
theme_void() +
theme(
plot.background = element_rect(fill = 'white', color = 'white'),
legend.margin = margin(r=10),
plot.title = element_text(hjust = 0.5),
plot.margin = margin(t = 20)
) +
labs(
title = "Rwanda Villages by Year of Electrification",
fill = "Electrified Year"
) +
theme(
legend.position = "right",  # Position the legend on the right
legend.title = element_text(size = 18),  # Increase legend title font size
legend.text = element_text(size = 16),  # Increase legend text font size
plot.title = element_text(size = 18)  # Increase plot title font size
)
View(rwa_long)
View(key_all)
View(rwa_long)
rwa_did <- left_join(rwa_long, key_all, by = c("village_id", "year"))
View(rwa_did)
year_first <= 2022 & year_first >= 2021 ~ "elec21_22",
rwa_did <- rwa_did %>%
mutate(
status = case_when(
year_first <= 2011 ~ "always_elec",
year_first <= 2014 & year_first >= 2012 ~ "elec12_14",
year_first <= 2017 & year_first >= 2015 ~ "elec15_17",
year_first <= 2020 & year_first >= 2018 ~ "elec18_20",
year_first <= 2022 & year_first >= 2021 ~ "elec21_22",
year_first == 2300 | is.na(year_first) ~ "never_elec"
)
)
rwa_did <- rwa_did %>%
mutate(
status = case_when(
year_first <= 2011 ~ "always_elec",
year_first <= 2014 & year_first >= 2012 ~ "elec12_14",
year_first <= 2017 & year_first >= 2015 ~ "elec15_17",
year_first <= 2020 & year_first >= 2018 ~ "elec18_20",
year_first <= 2022 & year_first >= 2021 ~ "elec21_22",
year_first == 2300 | is.na(year_first) ~ "never_elec"
)
) %>%
mutate(
always_elec = ifelse((year_first <= 2011), 1, 0),
elec12_14 = ifelse((year_first <= 2014 & year_first >= 2012), 1, 0),
elec15_17 = ifelse((year_first <= 2017 & year_first >= 2015), 1, 0),
elec18_20 = ifelse((year_first <= 2020 & year_first >= 2018), 1, 0),
never_elec = ifelse((year_first == 2300|is.na(year_first)), 1, 0)
)
ntl_all <- rwa_did %>%
filter(year %in% c("2011", "2021")) %>%
mutate(year_2021 = ifelse(year == 2021, 1, 0),
year_2011 =ifelse(year == 2011, 1, 0))
did_11 <- lm(Value ~ never_elec + year_2021*never_elec, data = ntl_all)
ntl_all <- rwa_did %>%
filter(year %in% c("2011", "2021")) %>%
mutate(year_2021 = ifelse(year == 2021, 1, 0),
year_2011 =ifelse(year == 2011, 1, 0))
did_11 <- lm(value ~ never_elec + year_2021*never_elec, data = ntl_all)
summary(did_11)
ntl_all <- rwa_did %>%
filter(year %in% c("2011", "2021")) %>%
mutate(year_2021 = ifelse(year == 2021, 1, 0),
year_2011 =ifelse(year == 2011, 1, 0))
ntl_did <- lm(value ~ never_elec + year_2021*never_elec, data = ntl_all)
summary(ntl_did)
modelsummary(
ntl_did,
output = "huxtable",
type = "html",
title = "Diff in diff of never electrified villages vs. other villages ",
stars = TRUE,
note = "Exclude districts Ngororero, Nyabihu, Nyamasheke, Rubavu"
# out = file.path(output_path, "es_ntl.html")
)
modelsummary(
ntl_did,
output = "huxtable",
type = "html",
title = "Diff in diff of never electrified villages vs. other villages ",
stars = TRUE,
# note = "Exclude districts Ngororero, Nyabihu, Nyamasheke, Rubavu"
# out = file.path(output_path, "es_ntl.html")
)
modelsummary(
ntl_did,
output = "huxtable",
type = "html",
title = "NTL all sample(2011-2021) ",
stars = TRUE,
# note = "Exclude districts Ngororero, Nyabihu, Nyamasheke, Rubavu"
# out = file.path(output_path, "es_ntl.html")
)
ntl_establishment <- rwa_did %>%
filter(year %in% c("2011", "2014", "2017", "2020")) %>%
mutate(
year_2011 = ifelse(year == 2011, 1, 0),
year_2014 = ifelse(year == 2014, 1, 0),
year_2017 = ifelse(year == 2017, 1, 0),
year_2020 = ifelse(year == 2020, 1, 0))
ntl_ec <- lm(value ~ never_elec + year_2020*never_elec, data = ntl_establishment)
summary(ntl_ec)
modelsummary(
ntl_ec,
output = "huxtable",
type = "html",
title = "NTL establishment census years \n (2011, 2014, 2017, 2020) ",
stars = TRUE,
# note = "Exclude districts Ngororero, Nyabihu, Nyamasheke, Rubavu"
# out = file.path(output_path, "es_ntl.html")
)
modelsummary(
ntl_ec,
output = "huxtable",
type = "html",
title = "NTL establishment census years (2011, 2014, 2017, 2020) ",
stars = TRUE,
# note = "Exclude districts Ngororero, Nyabihu, Nyamasheke, Rubavu"
# out = file.path(output_path, "es_ntl.html")
)
establishment_ec <- lm(num_establishment  ~ never_elec + year_2020*never_elec, data = ntl_establishment)
summary(establishment_ec)
ec_list <- list(
`num_establishment` = establishment_ec,
`ntl value` = ntl_ec
)
modelsummary(
ec_list,
output = "huxtable",
type = "html",
title = "Eishment census years (2011, 2014, 2017, 2020) ",
stars = TRUE,
# note = "Exclude districts Ngororero, Nyabihu, Nyamasheke, Rubavu"
# out = file.path(output_path, "es_ntl.html")
)
modelsummary(
ec_list,
output = "huxtable",
type = "html",
title = "Establishment census years (2011, 2014, 2017, 2020) ",
stars = TRUE,
# note = "Exclude districts Ngororero, Nyabihu, Nyamasheke, Rubavu"
# out = file.path(output_path, "es_ntl.html")
)
