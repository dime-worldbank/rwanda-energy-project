
##########################
#Author: Xiaoming Zhang
#Date of last modification: 10292024
#purpose:NISR establishment census analysis
############################


#library----
# install.packages("plm")

pacman::p_load(fixest, tidyverse, dplyr, here, sf, ggplot2, readxl, writexl, janitor, plm, haven, stringr, modelsummary, kableExtra, stargazer, lfe)
library(raster)
library(exactextractr)
library(dplyr)
# library(rgdal)
library(here)
library(ggplot2)
library(sf)


if (Sys.getenv("USERNAME") == "wb614406"){
  DROPBOX <- file.path("C:/Users/wb614406/Dropbox")
}

rct_data_path <- file.path(
  DROPBOX,
  "Rwanda Energy/EAQIP/datawork/RCT_data",
  "baseline/data/data"
)

historical_data_path <- file.path(
  DROPBOX,
  "Rwanda Energy/EAQIP/datawork/Historical data"
)

output_path <- "C:/Users/wb614406/Dropbox/Rwanda Energy/EAQIP/datawork/Historical data/Nightlight/output"



#Read files-----

rwa_cell <- st_read(dsn = file.path(historical_data_path, "rwa_cell", "Cell.shp"))

ntl_2022 <- raster(file.path(historical_data_path, "Nightlight", "data", "gb_viirs_corrected_monthly_start_201401_avg_rad.tif"), 101)
rwa_district <- st_read(dsn = file.path(historical_data_path, "rwa_district", "District.shp"))
rwa_district <- st_transform(rwa_district, crs = st_crs(ntl_2022))


mv_2022 <- st_read(dsn = file.path(historical_data_path, "Existing Electrical Network_2022", "Existing_MVLine.shp"))
mv_2022 <- st_transform(mv_2022, crs = st_crs(ntl_2022))

hv_2022 <- st_read(dsn = file.path(historical_data_path, "Existing Electrical Network_2022", "Existing_HVLine.shp"))
hv_2022 <- st_transform(hv_2022, crs = st_crs(ntl_2022))

transformer_2022 <- st_read(dsn = file.path(historical_data_path, "Existing Electrical Network_2022", "Existing_Transformer.shp"))
transformer_2022 <- st_transform(transformer_2022, crs = st_crs(ntl_2022))


ntl_2014 <- raster(file.path(historical_data_path, "Nightlight", "data", "rw_viirs_corrected_monthly_start_201401_avg_rad.tif"), 1)
rwa_district <- st_read(dsn = file.path(rct_data_path, "rwa_district", "District.shp"))
rwa_district <- st_transform(rwa_district, crs = st_crs(ntl_2014))

mv_2011 <- st_read(dsn = file.path(historical_data_path, "Existing Electrical Network_2011", "Existing_MVLine.shp"))
mv_2011 <- st_transform(mv_2011, crs = st_crs(ntl_2014))

hv_2011 <- st_read(dsn = file.path(historical_data_path, "Existing Electrical Network_2011", "Existing_HVLine.shp"))
hv_2011 <- st_transform(hv_2011, crs = st_crs(ntl_2014))

transformer_2011 <- st_read(dsn = file.path(historical_data_path, "Existing Electrical Network_2011", "Existing_Transformer.shp"))
transformer_2011 <- st_transform(transformer_2011, crs = st_crs(ntl_2014))

rwa_villages <- st_read(dsn = file.path(historical_data_path, "rwa_villages", "Village.shp"))
rwa_villages <- st_make_valid(rwa_villages)
rwa_villages <- st_zm(rwa_villages)




#1.viirs map of Rwanda-----

##2022----
ntl_2022 <- crop(ntl_2022, rwa_district)
ntl_2022 <- mask(ntl_2022, rwa_district)

# plot(ntl_2022)

df_2022 <- rasterToPoints(ntl_2022, spatial = TRUE) %>% as.data.frame()
names(df_2022) <- c("value", "x", "y")

summary(df_2022$value)

df_2022 <- df_2022 %>%
  mutate(
    value = ifelse(value < 0 , 0, value), 
    value = ifelse(value >= 2, 2, value), # Cap values at 2
    value_adj = (value)^(1/4)  # Take the 1/4th root of value
  )


p_2022 <- ggplot(data = df_2022) +
  geom_tile(aes(x = x, y = y, fill = value_adj)) +  # Continuous fill based on value_adj
  scale_fill_gradient(
    low = "black", high = "yellow",  # Continuous gradient from dark to bright yellow
    name = "Brightness"
  ) +
  theme_void()   # Remove background grids and axes
  # theme(
  #   legend.position = "right",
  #   legend.title = element_text(size = 18,  margin = margin(b = 10)),
  #   legend.text = element_text(size = 16),
  #   plot.title = element_text(hjust = 0.5, size = 18, face = "bold"),
  #   plot.caption = element_text(size = 25)
  # ) +
  # labs(
  #   title = "Rwanda Nightlight 2022",
  #   fill = "Brightness "
  #   # caption = "Source: VIIRS"
  # )

p_2022




##2014----
ntl_2014 <- crop(ntl_2014, rwa_district)
ntl_2014 <- mask(ntl_2014, rwa_district)

# plot(ntl_2014)

df_2014 <- rasterToPoints(ntl_2014, spatial = TRUE) %>% as.data.frame()
names(df_2014) <- c("value", "x", "y")

summary(df_2014$value)

df_2014 <- df_2014 %>%
  mutate(
    value = ifelse(value < 0, 0, value), # Cap values at 2
    value = ifelse(value >= 2, 2, value), 
    value_adj = (value)^(1/4)  # Take the 1/4th root of value
  )

p_2014 <- ggplot(data = df_2014) +
  geom_tile(aes(x = x, y = y, fill = value_adj)) +  # Continuous fill based on value_adj
  scale_fill_gradient(
    low = "black", high = "yellow"  # Continuous gradient from dark to bright yellow
    # name = "Brightness(1/4 root)"
  ) +
  theme_void()   # Remove background grids and axes
  # theme(
  #   legend.position = "right",
  #   legend.title = element_text(size = 18,  margin = margin(b = 10)),
  #   legend.text = element_text(size = 16),
  #   plot.title = element_text(hjust = 0.5, size = 18, face = "bold"),
  #   plot.caption = element_text(size = 25)
  # ) +
  labs(
    # title = "Rwanda Nightlight 2014",
    # fill = "Brightness "
    # caption = "Source: VIIRS"
  )

p_2014













  
#2. maps of Rwanda cells shaded for different groups -----
#(never electrified, electrified 2012-2014, electrified2015-2017)
    
rwa_cell <- st_read(dsn = file.path(historical_data_path, "rwa_cell", "Cell.shp"))

rwa_district <- st_read(dsn = file.path(rct_data_path, "rwa_district", "District.shp"))
rwa_district <- st_transform(rwa_district, crs = st_crs(rwa_cell))


rwa_boundary = st_read(dsn = file.path(rct_data_path,"rwa_boundary", "RWA_adm0.shp"))
rwa_boundary = st_transform(rwa_boundary, crs = st_crs(rwa_cell))



rwa_cell <- rwa_cell %>% 
  mutate(Cell_ID = as.character(Cell_ID))

rwa_regress <- read_xlsx(path = file.path(historical_data_path, "rwa_regress_wtax.xlsx"))

cell_electrified <- rwa_regress %>% 
  distinct(cell_id, .keep_all = TRUE) %>% 
  select(cell_id, year_first, status, never_elec, elec12_14, elec15_17)

rwa_cell_join <- left_join(rwa_cell, cell_electrified, by = c("Cell_ID" = "cell_id"))
  
rwa_cell_join <- rwa_cell_join %>%
  mutate(
     never_elec = ifelse(never_elec == 1, "never electrified", "other"),
     elec12_14 = ifelse(elec12_14 == 1, "electrified 2012-2014", "other"),
     elec15_17 = ifelse(elec15_17 ==1 , "electrified 2015-2017", "other")
    )
  

never_elec_plot <- ggplot(data = rwa_cell_join %>% filter(never_elec == "never electrified")) +
  geom_sf(aes(fill = "Never Electrified"), color = "lightgrey", size = 0.1) +
  geom_sf(data = rwa_cell, color = "lightgrey", fill = NA, size = 0.5) +
  geom_sf(data = rwa_district, color = "black", fill = NA, size = 0.5) +
  geom_sf(data = rwa_boundary, color = "black", fill = NA, size = 0.5) +
  scale_fill_manual(values = c("Never Electrified" = "#F8766D")) +
  theme_void() +
  labs(caption = "Cells that were never electrified") +
  theme(
    legend.position = "none",
    plot.caption = element_text(hjust = 0, size = 12, face = "italic"),  # Right-align caption
    plot.caption.position = "plot"  # Place caption in lower right of the plot area
  )

never_elec_plot


elec12_14_plot <- ggplot(data = rwa_cell_join %>% filter(elec12_14 == "electrified 2012-2014")) +
  geom_sf(aes(fill = "Electrified 2012-2014"), color = "lightgrey", size = 0.1) +
  geom_sf(data = rwa_cell, color = "lightgrey", fill = NA, size = 0.5) +
  geom_sf(data = rwa_district, color = "black", fill = NA, size = 0.5) +
  geom_sf(data = rwa_boundary, color = "black", fill = NA, size = 0.5) +
  scale_fill_manual(values = c("Electrified 2012-2014" = "#00BFC4")) +
  theme_void() +
  labs(caption = "Cells electrified in 2012-2014") +
  theme(
    legend.position = "none",
    plot.caption = element_text(hjust = 0, size = 12, face = "italic"),
    plot.caption.position = "plot"
  )

elec12_14_plot


elec15_17_plot <- ggplot(data = rwa_cell_join %>% filter(elec15_17 == "electrified 2015-2017")) +
  geom_sf(aes(fill = "Electrified 2015-2017"), color = "lightgrey", size = 0.1) +
  geom_sf(data = rwa_cell, color = "lightgrey", fill = NA, size = 0.5) +
  geom_sf(data = rwa_district, color = "black", fill = NA, size = 0.5) +
  geom_sf(data = rwa_boundary, color = "black", fill = NA, size = 0.5) +
  scale_fill_manual(values = c("Electrified 2015-2017" = "#7CAE00")) +
  theme_void() +
  labs(caption = "Cells electrified in 2015-2017") +
  theme(
    legend.position = "none",
    plot.caption = element_text(hjust = 0, size = 12, face = "italic"),
    plot.caption.position = "plot"
  )

elec15_17_plot



#3. Event Study----

#library----
# install.packages("plm")

pacman::p_load(fixest, tidyverse, dplyr, here, sf, ggplot2, readxl, writexl, janitor, plm, haven, stringr, modelsummary, kableExtra, stargazer, lfe)


#read file----

if (Sys.getenv("USERNAME") == "wb614406"){
  DROPBOX <- file.path("C:/Users/wb614406/Dropbox")
}

data_path <- file.path(
  DROPBOX, "Rwanda Energy/EAQIP/datawork/Historical data"
)


rwa_regress_village <- read_xlsx(path = file.path(data_path, "rwa_regress_villagelevel.xlsx"))

rra_registered <- read_xlsx(path = file.path (data_path, "rra_registered.xlsx"))

rwa_regress <- left_join(rwa_regress_village, rra_registered, by = c("village_id", "year"))


rwa_event <- rwa_regress %>% 
  filter(year == 2011 | year == 2014 | year == 2017 | year == 2020) %>% 
  complete(village_id, year, fill = list(registered_rra = 0))




#line plot----

descriptive <- rwa_event %>% 
  group_by(
    year, status
  ) %>% 
  summarise(
    num_establishment = round(mean(num_establishment), 2),
    total_employee = round(mean(total_employee), 2),
    registered_rra = round(mean(registered_rra, na.rm = TRUE), 2)
  )


filter <- descriptive %>% 
  filter(status %in% c("elec12_14", "elec15_17", "never_elec")) %>% 
  mutate(
    status = case_when(
      status == "elec12_14" ~ "2012-2014",
      status == "elec15_17" ~ "2015-2017",
      status == "never_elec" ~ "not yet electrified"
    )
  ) 



# Plot for registered RRA establishments
ggplot(filter, aes(x = as.factor(year), y = registered_rra, color = status, group = status)) +
  geom_line(size = 1) +
  geom_point(size = 3) +
  geom_text(aes(label = registered_rra), vjust = -0.5, size = 6) +  # Add data labels
  labs(
    x = "Year",
    y = "# of RRA-registered establishments",
    color = "Electrified"
  ) +
  scale_y_continuous(limits = c(0, NA)) +  # Set y-axis to start at 0
  theme_minimal() +
  theme(
    legend.position = "top",
    text = element_text(size = 26),  # General text size
    axis.title.x = element_text(size = 26),  # X-axis label size
    axis.title.y = element_text(size = 26),  # Y-axis label size
    axis.text = element_text(size = 28),
    plot.title = element_text(size = 35) 
  )

# Plot for number of establishments
ggplot(filter, aes(x = as.factor(year), y = num_establishment, color = status, group = status)) +
  geom_line(size = 1) +
  geom_point(size = 3) +
  geom_text(aes(label = num_establishment), vjust = -0.5, size = 6) +  # Add data labels
  labs(
    x = "Year",
    y = "Number of Establishments",
    color = "Electrified"
  ) +
  scale_y_continuous(limits = c(0, NA)) +  # Set y-axis to start at 0
  theme_minimal() +
  theme(
    legend.position = "top",
    text = element_text(size = 26),  # General text size
    axis.title.x = element_text(size = 26),  # X-axis label size
    axis.title.y = element_text(size = 26),  # Y-axis label size
    axis.text = element_text(size = 28),
    plot.title = element_text(size = 35) 
  )

# Plot for number of employees
ggplot(filter, aes(x = as.factor(year), y = total_employee, color = status, group = status)) +
  geom_line(size = 1) +
  geom_point(size = 3) +
  geom_text(aes(label = total_employee), vjust = -0.5, size = 6) +  # Add data labels
  labs(
    x = "Year",
    y = "Number of Employees",
    color = "Electrified"
  ) +
  scale_y_continuous(limits = c(0, NA)) +  # Set y-axis to start at 0
  theme_minimal() +
  theme(
    legend.position = "top",
    text = element_text(size = 26),  # General text size
    axis.title.x = element_text(size = 26),  # X-axis label size
    axis.title.y = element_text(size = 26),  # Y-axis label size
    axis.text = element_text(size = 28),
    plot.title = element_text(size = 35) 
  )








##Number of establishment----

#12_14
elec12_14 <- rwa_event %>% 
  filter(elec12_14 == 1 | never_elec == 1) %>% 
  mutate(
    p0_2014 = ifelse(year == 2014, 1, 0),
    p1_2017 = ifelse(year == 2017, 1, 0),
    p2_2020 = ifelse(year == 2020, 1, 0)
  )  

establishment12_14 <- felm(num_establishment ~ p0_2014:elec12_14 + p1_2017:elec12_14 + p2_2020:elec12_14|village_id + year, cluster = "village_id" ,data = elec12_14)
summary(establishment12_14)


##15_17
elec15_17 <- rwa_event %>% 
  filter(elec15_17 == 1 | never_elec == 1) %>% 
  mutate(
    p_2_2011 = ifelse(year == 2011 , 1, 0),
    p0_2017 = ifelse(year == 2017, 1, 0),
    p1_2020 = ifelse(year == 2020, 1, 0)
  )


establishment15_17 <- felm(num_establishment ~ p_2_2011:elec15_17 + p0_2017:elec15_17 + p1_2020:elec15_17|village_id +year, cluster = "village_id",data = elec15_17)
summary(establishment15_17)



##Graph====



library(broom)
summary(establishment12_14)
summary(establishment15_17)

# Extract coefficients and standard errors from each model
coeff12_14 <- tidy(establishment12_14) %>% mutate(Period = "2012-2014")
coeff15_17 <- tidy(establishment15_17) %>% mutate(Period = "2015-2017")


# Combine the coefficients
coefficients <- bind_rows(coeff12_14, coeff15_17)

# Filter out intercepts and irrelevant terms, and create a 'Year' variable
coefficients <- coefficients %>% 
  filter(!grepl("Intercept", term)) %>%
  mutate(
    Year = case_when(
      grepl("p0_2014", term) ~ 2014,
      grepl("p0_2017", term) ~ 2017,
      grepl("p1_2017", term) ~ 2017,
      grepl("p0_2020", term) ~ 2020,
      grepl("p1_2020", term) ~ 2020,
      grepl("p2_2020", term) ~ 2020,
      grepl("p_2_2011", term) ~ 2011,
      grepl("p_3_2011", term) ~ 2011,
      grepl("p_2_2014", term) ~ 2014
    )
  ) %>% 
  mutate(
    Year = as.factor(Year)
  ) %>% 
  complete(
    Period, Year, fill = list(estimate = 0, std.error = 0, statistic = 0, p.value = 0)
  )

# Add significance stars based on p-values
coefficients <- coefficients %>%
  mutate(
    significance = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01 ~ "**",
      p.value < 0.05 ~ "*",
      TRUE ~ ""
    ) # Combine estimate with stars
  ) %>% 
  mutate(
    significance = ifelse(is.na(term), "", significance),
    label = paste0(round(estimate, 2), significance) 
  )


##2012-2017----
coefficients_filtered <- coefficients %>%
  filter(Period == "2015-2017" | Period == "2012-2014") %>%
  mutate(
    Period = case_when(
      Period == "2015-2017" ~ "Later wave",
      Period == "2012-2014" ~ "Early wave"
    ),
    # Mutate the new column 'year_since_electrification' based on the 'term' column
    since_electrification = case_when(
      str_detect(term, "p0") ~ "1-3 years",
      str_detect(term, "p1") ~ "4-6 years",
      str_detect(term, "p2") ~ "7-9 years",
      TRUE ~ NA_character_  # Leave as NA if term doesn't match p0, p1, p2
    )
  ) %>% 
  filter(!is.na(since_electrification))


# Plot with ggplot
ggplot(coefficients_filtered, aes(x = since_electrification, y = estimate, color = Period, group = Period)) +
  geom_point(size = 3) +
  geom_line(size = 1) +
  geom_errorbar(aes(ymin = estimate - 1.96 * std.error, ymax = estimate + 1.96 * std.error), width = 0.2) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +  
  geom_label(aes(label = label), fill = "white", color = "black", size = 9, label.padding = unit(0.2, "lines")) +  # Adding labels with significance stars
  labs(
    x = "Year since electrification",
    y = "Number of establishments",
    color = "Electrified"
  ) +
  theme_minimal() +
  theme(
    legend.position = "right",
    text = element_text(size = 26),  # General text size
    axis.title.x = element_text(size = 26),  # X-axis label size
    axis.title.y = element_text(size = 26),  # Y-axis label size
    axis.text = element_text(size = 28),
    plot.title = element_text(size = 35) 
  )





##Number of employee----

#12_14
elec12_14 <- rwa_event %>% 
  filter(elec12_14 == 1 | never_elec == 1) %>% 
  mutate(
    p0_2014 = ifelse(year == 2014, 1, 0),
    p1_2017 = ifelse(year == 2017, 1, 0),
    p2_2020 = ifelse(year == 2020, 1, 0)
  )  

employee12_14 <- felm(total_employee ~ p0_2014:elec12_14 + p1_2017:elec12_14 + p2_2020:elec12_14|village_id + year, cluster = "village_id" ,data = elec12_14)
summary(employee12_14)


##15_17
elec15_17 <- rwa_event %>% 
  filter(elec15_17 == 1 | never_elec == 1) %>% 
  mutate(
    p_2_2011 = ifelse(year == 2011 , 1, 0),
    p0_2017 = ifelse(year == 2017, 1, 0),
    p1_2020 = ifelse(year == 2020, 1, 0)
  )


employee15_17 <- felm(total_employee ~ p_2_2011:elec15_17 + p0_2017:elec15_17 + p1_2020:elec15_17|village_id +year, cluster = "village_id",data = elec15_17)
summary(employee15_17)



##Graph====



library(broom)
summary(employee12_14)
summary(employee15_17)

# Extract coefficients and standard errors from each model
coeff12_14 <- tidy(employee12_14) %>% mutate(Period = "2012-2014")
coeff15_17 <- tidy(employee15_17) %>% mutate(Period = "2015-2017")


# Combine the coefficients
coefficients <- bind_rows(coeff12_14, coeff15_17)

# Filter out intercepts and irrelevant terms, and create a 'Year' variable
coefficients <- coefficients %>% 
  filter(!grepl("Intercept", term)) %>%
  mutate(
    Year = case_when(
      grepl("p0_2014", term) ~ 2014,
      grepl("p0_2017", term) ~ 2017,
      grepl("p1_2017", term) ~ 2017,
      grepl("p0_2020", term) ~ 2020,
      grepl("p1_2020", term) ~ 2020,
      grepl("p2_2020", term) ~ 2020,
      grepl("p_2_2011", term) ~ 2011,
      grepl("p_3_2011", term) ~ 2011,
      grepl("p_2_2014", term) ~ 2014
    )
  ) %>% 
  mutate(
    Year = as.factor(Year)
  ) %>% 
  complete(
    Period, Year, fill = list(estimate = 0, std.error = 0, statistic = 0, p.value = 0)
  )

# Add significance stars based on p-values
coefficients <- coefficients %>%
  mutate(
    significance = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01 ~ "**",
      p.value < 0.05 ~ "*",
      TRUE ~ ""
    ) # Combine estimate with stars
  ) %>% 
  mutate(
    significance = ifelse(is.na(term), "", significance),
    label = paste0(round(estimate, 2), significance) 
  )


##2012-2017----
coefficients_filtered <- coefficients %>%
  filter(Period == "2015-2017" | Period == "2012-2014") %>%
  mutate(
    Period = case_when(
      Period == "2015-2017" ~ "Later wave",
      Period == "2012-2014" ~ "Early wave"
    ),
    # Mutate the new column 'year_since_electrification' based on the 'term' column
    since_electrification = case_when(
      str_detect(term, "p0") ~ "1-3 years",
      str_detect(term, "p1") ~ "4-6 years",
      str_detect(term, "p2") ~ "7-9 years",
      TRUE ~ NA_character_  # Leave as NA if term doesn't match p0, p1, p2
    )
  ) %>% 
  filter(!is.na(since_electrification))


# Plot with ggplot
ggplot(coefficients_filtered, aes(x = since_electrification, y = estimate, color = Period, group = Period)) +
  geom_point(size = 3) +
  geom_line(size = 1) +
  geom_errorbar(aes(ymin = estimate - 1.96 * std.error, ymax = estimate + 1.96 * std.error), width = 0.2) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +  
  geom_label(aes(label = label), fill = "white", color = "black", size = 9, label.padding = unit(0.2, "lines")) +  # Adding labels with significance stars
  labs(
    x = "Year since electrification",
    y = "Number of employees",
    color = "Electrified"
  ) +
  theme_minimal() +
  theme(
    legend.position = "right",
    text = element_text(size = 26),  # General text size
    axis.title.x = element_text(size = 26),  # X-axis label size
    axis.title.y = element_text(size = 26),  # Y-axis label size
    axis.text = element_text(size = 28),
    plot.title = element_text(size = 35) 
  )





##registered_rra----

#12_14
elec12_14 <- rwa_event %>% 
  filter(elec12_14 == 1 | never_elec == 1) %>% 
  mutate(
    p0_2014 = ifelse(year == 2014, 1, 0),
    p1_2017 = ifelse(year == 2017, 1, 0),
    p2_2020 = ifelse(year == 2020, 1, 0)
  )  

rra_registered12_14 <- felm(registered_rra ~ p0_2014:elec12_14 + p1_2017:elec12_14 + p2_2020:elec12_14|village_id + year, cluster = "village_id" ,data = elec12_14)
summary(rra_registered12_14)


##15_17
elec15_17 <- rwa_event %>% 
  filter(elec15_17 == 1 | never_elec == 1) %>% 
  mutate(
    p_2_2011 = ifelse(year == 2011 , 1, 0),
    p0_2017 = ifelse(year == 2017, 1, 0),
    p1_2020 = ifelse(year == 2020, 1, 0)
  )


rra_registered15_17 <- felm(registered_rra ~ p_2_2011:elec15_17 + p0_2017:elec15_17 + p1_2020:elec15_17|village_id +year, cluster = "village_id",data = elec15_17)
summary(rra_registered15_17)



##Graph====



library(broom)
summary(rra_registered12_14)
summary(rra_registered15_17)


# Extract coefficients and standard errors from each model
rra_coeff12_14 <- tidy(rra_registered12_14) %>% mutate(Period = "2012-2014", coefficient = "Establishments registered at RRA")
rra_coeff15_17 <- tidy(rra_registered15_17) %>% mutate(Period = "2015-2017", coefficient = "Establishments registered at RRA")


# Combine the coefficients
coefficients <- bind_rows(rra_coeff12_14, rra_coeff15_17)

# Filter out intercepts and irrelevant terms, and create a 'Year' variable
coefficients <- coefficients %>% 
  filter(!grepl("Intercept", term)) %>%
  mutate(
    Year = case_when(
      grepl("p0_2014", term) ~ 2014,
      grepl("p0_2017", term) ~ 2017,
      grepl("p1_2017", term) ~ 2017,
      grepl("p0_2020", term) ~ 2020,
      grepl("p1_2020", term) ~ 2020,
      grepl("p2_2020", term) ~ 2020,
      grepl("p_2_2011", term) ~ 2011,
      grepl("p_3_2011", term) ~ 2011,
      grepl("p_2_2014", term) ~ 2014
    )
  ) %>% 
  mutate(
    Year = as.factor(Year)
  ) %>% 
  complete(
    Period, Year, fill = list(estimate = 0, std.error = 0, statistic = 0, p.value = 0)
  )

# Add significance stars based on p-values
coefficients <- coefficients %>%
  mutate(
    significance = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01 ~ "**",
      p.value < 0.05 ~ "*",
      TRUE ~ ""
    ) # Combine estimate with stars
  ) %>% 
  mutate(
    significance = ifelse(is.na(term), "", significance),
    label = paste0(round(estimate, 2), significance) 
  )


##2012-2017----
coefficients_filtered <- coefficients %>%
  filter(Period == "2015-2017" | Period == "2012-2014") %>%
  mutate(
    Period = case_when(
      Period == "2015-2017" ~ "Later Wave",
      Period == "2012-2014" ~ "Early Wave"
    ),
    # Mutate the new column 'year_since_electrification' based on the 'term' column
    since_electrification = case_when(
      str_detect(term, "p0") ~ "1-3 years",
      str_detect(term, "p1") ~ "4-6 years",
      str_detect(term, "p2") ~ "7-9 years",
      TRUE ~ NA_character_  # Leave as NA if term doesn't match p0, p1, p2
    )
  ) %>% 
  filter(!is.na(since_electrification))


# Plot with ggplot
ggplot(coefficients_filtered, aes(x = since_electrification, y = estimate, color = Period, group = Period)) +
  geom_point(size = 3) +
  geom_line(size = 1) +
  geom_errorbar(aes(ymin = estimate - 1.96 * std.error, ymax = estimate + 1.96 * std.error), width = 0.2) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +  
  geom_label(aes(label = label), fill = "white", color = "black", size = 9, label.padding = unit(0.2, "lines")) +  # Adding labels with significance stars
  labs(
    x = "Year since electrification",
    y = "# of RRA registered establishments",
    color = "Electrified"
  ) +
  theme_minimal() +
  theme(
    legend.position = "right",
    text = element_text(size = 26),  # General text size
    axis.title.x = element_text(size = 26),  # X-axis label size
    axis.title.y = element_text(size = 26),  # Y-axis label size
    axis.text = element_text(size = 28),
    plot.title = element_text(size = 35) 
  )




#Nightlight-----


rwa_df <- read_xlsx(file.path(data_path, "Nightlight", "data", "viirs(month_0.7.xlsx"))


# Loop through each year (2014 to 2023)
for (year in 2014:2023) {
  # Extract column indices for each month's data within the current year
  year_columns <- grep(paste0("^", year, "-"), names(rwa_df))
  
  # Calculate the mean across the 12 months for each row
  yearly_mean <- rowMeans(rwa_df[, year_columns], na.rm = TRUE)
  
  # Add the yearly mean as a new column in yearly_means_df
  yearly_means_df[[as.character(year)]] <- yearly_mean
}

# Add the yearly means back to rwa_df
rwa_df <- cbind(rwa_df, yearly_means_df)






#Yearly data only df 

rwa_yearly <- rwa_df %>% 
  select(Cell_ID, `2014`, `2015`, `2016`, `2017`, `2018`, `2019`, `2020`, `2021`, `2022`, `2023`)

rwa_long <- rwa_yearly %>% 
  pivot_longer(
    cols = `2014`:`2023`,      
    names_to = "Year",         
    values_to = "value_0.7"    
  ) %>% 
  mutate(Cell_ID = as.character(Cell_ID),
         Year = as.numeric(Year)) %>% 
  filter(Year < 2022)


rwa_regress <- read_xlsx(path = file.path(data_path, "rwa_regress_wtax.xlsx"))
rwa_regress <- left_join(rwa_regress, rwa_long, by = c("cell_id" = "Cell_ID", "year" = "Year"))

rwa_regress <- rwa_regress %>% 
  mutate(
    year_first = ifelse(year_first == 2300, 0, year_first)
  ) %>% 
  mutate(
    value_0.7 = ifelse(is.na(value_0.7), 0, value_0.7)
  )


rwa_event <- rwa_regress %>% 
  filter(year >= 2014) %>% 
  filter(elec15_17 == 1 | never_elec == 1) %>% 
  mutate(
    year_2015 = ifelse(year == 2015, 1, 0),
    year_2016 = ifelse(year == 2016, 1, 0),
    year_2017 = ifelse(year == 2017, 1, 0),
    year_2018 = ifelse(year == 2018, 1, 0),
    year_2019 = ifelse(year == 2019, 1, 0),
    year_2020 = ifelse(year == 2020, 1, 0),
    year_2021 = ifelse(year == 2021, 1, 0),
    year_2022 = ifelse(year == 2022, 1, 0)
  )


model <- felm(value_0.7 ~ 
                elec15_17:year_2015 + 
                elec15_17:year_2016 + 
                elec15_17:year_2017 + 
                elec15_17:year_2018 + 
                elec15_17:year_2019 + 
                elec15_17:year_2020 + 
                elec15_17:year_2021| cell_id + year, 
              cluster = "cell_id", 
              data = rwa_event)

summary(model)

stargazer(model, 
          title = "Nightlight Model Results", 
          out = "nightlight.tex", 
          type = "latex", 
          dep.var.labels = "Value 0.7", 
          covariate.labels = c("Electrified 2015", "Electrified 2016", "Electrified 2017", 
                               "Electrified 2018", "Electrified 2019", "Electrified 2020", 
                               "Electrified 2021"), 
          add.lines = list(c("Fixed Effects", "Cell ID & Year")),
          model.names = FALSE, 
          align = TRUE)



#Graph----

ntl_coeff15_17 <- tidy(model) %>% mutate(Period = "2015-2017", coefficient = "Nightlight")
# Summarize the model results and save to a .tex file
stargazer(model, 
          title = "Nightlight Model Results", 
          out = "nightlight.tex", 
          type = "latex", 
          dep.var.labels = "Value 0.7", 
          covariate.labels = c("Electrified 2015", "Electrified 2016", "Electrified 2017", 
                               "Electrified 2018", "Electrified 2019", "Electrified 2020", 
                               "Electrified 2021"), 
          add.lines = list(c("Fixed Effects", "Cell ID & Year")),
          model.names = FALSE, 
          align = TRUE)

coefficients <- ntl_coeff15_17 %>%
  # filter(!grepl("Intercept", term)) %>%
  mutate(
    Year = case_when(
      str_detect(term, "2015") ~ 2015,
      str_detect(term, "2016") ~ 2016,
      str_detect(term, "2017") ~ 2017,
      str_detect(term, "2018") ~ 2018,
      str_detect(term, "2019") ~ 2019,
      str_detect(term, "2020") ~ 2020,
      str_detect(term, "2021") ~ 2021,
      str_detect(term, "2022") ~ 2022,
      TRUE ~ NA_real_  # Handle unmatched terms
    ),
    significance = case_when(
      p.value < 0.001 ~ "***",
      p.value < 0.01 ~ "**",
      p.value < 0.05 ~ "*",
      TRUE ~ ""
    ),
    label = paste0(round(estimate, 3), significance)
  ) %>%
  filter(!is.na(Year)) %>%
  # Add 2014 with zero estimate
  bind_rows(data.frame(
    term = "Electrified 2014",  # Adjust the term as needed
    estimate = 0,               # Coefficient of 0
    p.value = NA,               # Set p-value to NA or a high value
    Year = 2014,
    significance = "",
    label = "0",
    coefficient = "Nightlight",
    Period = "2015-2017"
  ))



ggplot(coefficients, aes(x = Year, y = estimate, color = Period, group = Period)) +
  geom_point(size = 3) +
  geom_line(size = 1) +
  geom_errorbar(aes(ymin = estimate - 1.96 * std.error, ymax = estimate + 1.96 * std.error), width = 0.2) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black", size = 1) +  
  geom_label(aes(label = label), fill = "white", color = "black", size = 6, label.padding = unit(0.2, "lines")) +  # Adjust size here
  labs(
    x = "Year",
    y = "Nightlight",
    color = "Electrified"
  ) +
  scale_x_continuous(breaks = seq(2014, 2022, 1), expand = expansion(mult = c(0, 0.05))) +  # Include all years
  theme_minimal() +
  theme(
    legend.position = "right",
    text = element_text(size = 26),
    axis.title.x = element_text(size = 26),
    axis.title.y = element_text(size = 26),
    axis.text = element_text(size = 28),
    plot.title = element_text(size = 35)
  )

##line plot-----

descriptive <- rwa_event %>% 
  group_by(
    year, status
  ) %>% 
  summarise(
   value_0.7 = round(mean(value_0.7), 4)
  )


filter <- descriptive %>% 
  filter(status %in% c("elec15_17", "never_elec")) %>% 
  mutate(
    status = case_when(
      status == "elec15_17" ~ "2015-2017",
      status == "never_elec" ~ "not yet electrified"
    )
  ) 

ggplot(filter, aes(x = as.factor(year), y = value_0.7, color = status, group = status)) +
  geom_line(size = 1) +
  geom_point(size = 3) +
  geom_text(aes(label = value_0.7), vjust = -0.5, size = 6) +  # Add data labels
  labs(
    x = "Year",
    y = "Nightlight Value",
    color = "Electrified"
  ) +
  scale_y_continuous(limits = c(0, NA)) +  # Set y-axis to start at 0
  theme_minimal() +
  theme(
    legend.position = "top",
    text = element_text(size = 26),  # General text size
    axis.title.x = element_text(size = 26),  # X-axis label size
    axis.title.y = element_text(size = 26),  # Y-axis label size
    axis.text = element_text(size = 28),
    plot.title = element_text(size = 35) 
  )



#4. Balance table----







































