rct_data_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/RCT_data",
"baseline/data/data"
)
historical_data_path <- file.path(
DROPBOX,
"Rwanda Energy/datawork/Historical data"
)
four_district <- read_xlsx(here(rct_data_path,"four_district_2404.xlsx"))
sum(four_district$scope_2403 == 1)
four_district %>%
filter(customer != 0 ) %>%
group_by(district) %>%
summarise(n = n())
#2 scope villages----
#how many villages are we currently planning to conduct surveys in?
four_district %>%
filter(status == "newly" & scope_2403 == 1) %>%
group_by(district) %>%
summarise(n = n())
#3 satellite image----
#a satellite image of a village with dots at the coordinates of each meter, and with MV and LV lines included?
##read files
rwa_villages <- st_read(dsn = file.path(rct_data_path, "rwa_villages", "Village_area.shp"))
rwa_villages <- st_make_valid(rwa_villages)
###Existing----
existing_LV <- st_read(dsn = here(rct_data_path,"Existing Electrical Network_2022", "Existing_LVLine.shp"))
existing_MV <- st_read(dsn = here(rct_data_path,"Existing Electrical Network_2022", "Existing_MVLine.shp"))
existing_HV <- st_read(dsn = here(rct_data_path,"Existing Electrical Network_2022", "Existing_HVLine.shp"))
existing_LV <- st_transform(existing_LV, crs = st_crs(rwa_villages))
existing_MV <- st_transform(existing_MV, crs = st_crs(rwa_villages))
existing_HV <- st_transform(existing_HV, crs = st_crs(rwa_villages))
###meter----
rulindo_meter <- st_read(dsn = here(rct_data_path, "eucl meter", "rulindo_meter.shp"))
rulindo_meter <- st_transform(rulindo_meter, crs = st_crs(rwa_villages))
###Districts---
rulindo_village <- rwa_villages %>%
filter(District %in% c("Rulindo"))
rulindo_LV <- st_intersection(rulindo_village, existing_LV)
rulindo_MV <- st_intersection(rulindo_village, existing_MV)
rulindo_HV <- st_intersection(rulindo_village, existing_HV)
rulindo_village <- st_transform(rulindo_village, crs = 4326)
rulindo_LV <- st_transform(rulindo_LV, crs = 4326)
rulindo_MV <- st_transform(rulindo_MV, crs = 4326)
rulindo_HV <- st_transform(rulindo_HV, crs = 4326)
rulindo_meter <- st_transform(rulindo_meter, crs = 4326)
st_write(rulindo_village, dsn = file.path(rct_data_path, "rulindo_villages.shp"))
rwa_long <- read_xlsx(file.path(historical_data_path, "rwa_long_usage.xlsx"))
rwa_wide <- read_xlsx(file.path(historical_data_path, "rwa_wide.xlsx"))
usage_id <- read_xlsx(file.path(historical_data_path, "usage_id_0416.xlsx"))
usage_year <- usage_id %>%
group_by(village_id) %>%
summarise(
year_first = min(year_first)
)
n_distinct(usage_year$village_id)
rwa_fraction <- left_join(rwa_villages, usage_year, by = c("Village_ID" = "village_id"))
elec_fraction <- rwa_fraction %>%
filter(! District %in% c("Ngororero", "Nyabihu", "Nyamasheke", "Rubavu")) %>%
group_by(year_first) %>%
summarise(
connected = n()
)
for (year in 2011:2022) {
elec_fraction <- elec_fraction %>%
mutate(
connected = ifelse(year_first == year, sum(connected[year_first %in% c(year - 1, year)]), connected)
)
}
elec_fraction_plot <- elec_fraction %>%
st_drop_geometry() %>%
mutate(
fraction = round(connected/14815,2),
percentage = round(connected/14815*100, 2)
) %>%
filter(!is.na(year_first))
write_xlsx(elec_fraction_plot, path = here("elec_fraction_plot.xlsx"))
library(scales)
ggplot(elec_fraction_plot, aes(x = as.factor(year_first), y = percentage)) +
geom_bar(stat = "identity", width = 0.5, position = position_dodge(width = 0.1), color = "black", fill = "skyblue") +  # Adjust width as needed
# geom_text(aes(label = paste0(round(percentage, 2), "%")),
#           position = position_dodge(width = 0.5), vjust = -0.5, size = 5, color = "black") +  # Position labels above bars
labs(title = "Village with Electricity Connection Percentage Over Years", x = "Year", y = "Percentage of Village Connected") +
theme_minimal() +  # Use a minimal theme
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 30),  # Increase size of x-axis labels
axis.text.y = element_text(size = 30),  # Increase size of y-axis labels
axis.title = element_text(size = 30),  # Increase size of axis titles
plot.title = element_text(size = 30))
#6. See ntl
#7. Muhanga electrification status----
muhanga <- left_join(muhanga, usage_year, by = c("Village_ID" = "village_id"))
rwa_long_es <- rwa_long %>%
mutate(
year_first = case_when(
year_first == 2010 ~ 1900,
is.na(year_first) ~ 2300,
.default = year_first
)
)
rwa_long_es <- rwa_long_es %>%
mutate(
year = as.numeric(year),
year_first =as.numeric(year_first)
) %>%
mutate(time_elec = year - year_first)
rwa_long_es <- rwa_long_es %>%
mutate(
treatl3 = ifelse( time_elec <= -3 & time_elec>= -30 , 1, 0), # elec 3 or more years in the future
treatl2 = ifelse( time_elec == -2, 1, 0), #elec 2 years in the future
treatl1 = ifelse( time_elec == -1, 1, 0), #elec 2 years in the future
treatp0 = ifelse( time_elec == 0, 1, 0), #elec this year
treatp1 = ifelse( time_elec == 1, 1, 0), #elec last year
treatp2 = ifelse( time_elec ==  2, 1, 0), # elec last two years
treatp3 = ifelse( time_elec >= 3, 1, 0), #elec more than three years ago
notreat = ifelse(year_first == 2300, 1, 0)
)
rwa_long_es <- rwa_long_es %>%
mutate(
sector_id = substr(village_id, 1,4),
cell_if = substr(village_id, 1,6)
)
library(fixest)
library(modelsummary)
##include never electrified villages----
es_include <- rwa_long_es %>%
filter(year_first > 1900 ) %>%
filter(year >= 2010) %>%
feols(fml = value ~ treatl3 + treatl2 + treatp0 + treatp1 + treatp2 + treatp3 | village_id + year, cluster = "village_id") %>% summary()
summary(es_include)
modelsummary(
es_include,
output = "huxtable",
type = "html",
title = "Table: Events Study Village and Year",
stars = TRUE,
note = "excluding already electrified first year(2010)"
# out = file.path(output_path, "es_ntl.html")
)
##graph----
##graph----
library(broom)
coefs_df <- tidy(es_include)
new_row <- data.frame(term = "treatl1", estimate = 0, std.error = 0, statistic = 0, p.value = 0)
coefs_df <- coefs_df %>%
bind_rows(new_row)
coefs_df <- coefs_df %>%
mutate(
term = factor(term, levels = c("treatl3", "treatl2", "treatl1", "treatp0", "treatp1", "treatp2", "treatp3"))
) %>%
arrange(term)
ggplot(coefs_df, aes(x = term, y = estimate, group = 1)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - 1.96 * std.error, ymax = estimate + 1.96 *  std.error),
colour = "black", width = 0.1, position = position_dodge(0.1)) +
geom_line() +
geom_text(aes(label = round(estimate, 3)), vjust = 1.5, hjust = -0.5, size = 3) +  # Add data labels
labs(title = "Event Study on Nighttime Light",
x = "Year",
y = "Coefficient",
caption = "Including never electrified villages and excluding already electrified villages before 2010") +
annotate("text", x = "treatl1", y = 0, label = "reference point", vjust = -1)
#9. Diff in diff----
rwa_long <- rwa_wide %>%
pivot_longer(
cols = matches("^(19|20)"),
names_to = "year",
values_to = "value"
) %>%
clean_names()
rwa_long_did <- rwa_long %>%
mutate(
connect_vt = case_when(
year_first > year ~ 0,
year_first <= year ~ 1
)
)
sum(is.na(rwa_long_did$connect_vt))
rwa_long_did <- rwa_long_did %>%
mutate(
notreat = ifelse(is.na(connect_vt), 1, 0)
)
rwa_long_did <- rwa_long_did %>%
mutate(connect_vt = ifelse(is.na(connect_vt), 0, connect_vt))
##
##Run include ----
# Fit the fixed effects model
model_fe_did_include <- rwa_long_did %>%
feols(fml = value ~  connect_vt  | village_id + year, cluster = "village_id") %>% summary()
# View the summary of the model
summary(model_fe_did_include)
modelsummary(
model_fe_did_include,
output = "huxtable",
title = "Table: Diff in diff Village and year on ntl",
stars = TRUE,
# note = "excluding already electrified first year(2010)",
# out = file.path(output_path, "did_ntl.html")
)
#10. diff in diff----
rwa_long_did11 <- rwa_long %>%
filter(year %in% c("2011", "2021")) %>%
mutate(year_2021 = ifelse(year == 2021, 1, 0),
year_2011 =ifelse(year == 2011, 1, 0),
connect = case_when(
year_first == 2010 ~ "connect by 2010",
year_first > 2010 ~ "connect after 2010",
is.na(year_first) ~ "not connected" ,
.default = NULL
))
sum(is.na(rwa_long$year_first))
rwa_long_did11 <- rwa_long_did11 %>%
mutate(connect = factor(connect)) %>%   # Convert 'connect' to a factor
mutate(connect = relevel(connect, ref = "not connected"))  # Relevel 'connect'
View(rwa_long_did11)
did_11 <- lm(value ~ connect + year_2021 * connect, data = rwa_long_did11)
summary(did_11)
did_11_fe <- feols(value ~ connect + year_2021 * connect| district, cluster = "district", data = rwa_long_did11)
summary(did_11_fe)
did_11_list <- list(`no fixed effects` = did_11, `district fixed effects` = did_11_fe)
modelsummary(
did_11_list,
output = "huxtable",
title = "Table: Diff in diff Village and year",
stars = TRUE
# note = "excluding already electrified first year(2010)",
# out = file.path(output_path, "did_ntl.html")
)
#Join with population density----
pop_dens <- st_read(dsn = file.path(historical_data_path, "villages_old", "villages_boundaries.shp"))
pop_dens <- pop_dens %>%
mutate(Village_ID = as.character(Code_vill_)) %>%
select(-Code_vill_)
pop_dens <- pop_dens %>%  st_make_valid()
pop_dens$area <- st_area(pop_dens)
pop_dens <- pop_dens %>%
mutate(area = as.numeric(area),
popdens = Population/area)
pop_dens <- pop_dens %>%
select(popdens, Village_ID) %>%
clean_names() %>%
st_drop_geometry
rwa_long_did_pop <- left_join(rwa_long_did, pop_dens, by = c("village_id"))
#Join with usage----
usage_join <- usage_id %>%
group_by(village_id) %>%
summarise(
`2010_usage` = sum(`2010_usage`),
`2011_usage` = sum(`2011_usage`),
`2012_usage` = sum(`2012_usage`),
`2013_usage` = sum(`2013_usage`),
`2014_usage` = sum(`2014_usage`),
`2015_usage` = sum(`2015_usage`),
`2016_usage` = sum(`2016_usage`),
`2017_usage` = sum(`2017_usage`),
`2018_usage` = sum(`2018_usage`),
`2019_usage` = sum(`2019_usage`),
`2020_usage` = sum(`2020_usage`),
`2021_usage` = sum(`2021_usage`),
`2022_usage` = sum(`2022_usage`)
)
usage_join <- usage_join %>%
pivot_longer(
cols = ends_with("usage"),
names_to = "year",
values_to = "usage"
)%>%
mutate(
year = substr(year, 1,4),
year = as.double(year)
)
usage_join <- usage_join %>%
mutate(
year = as.character(year)
)
rwa_long_did_usage <- left_join(rwa_long_did_pop, usage_join, by = c("village_id", "year"))
#11. Four diff in diff----
##data prep----
rwa_long_did.2 <- rwa_long_did_usage %>%
filter(year %in% c("2010", "2021")) %>%
mutate(year_2021 = ifelse(year == 2021, 1, 0),
year_2010 =ifelse(year == 2010, 1, 0),
connect = case_when(
year_first == 2010 ~ "connect by 2010",
year_first > 2010 ~ "connect after 2010",
is.na(year_first) ~ "not connected" ,
.default = NULL
),
usage = ifelse(is.na(usage),0, usage)
)
percentile_60 <- quantile(rwa_long_did.2$popdens, probs = 0.60, na.rm = TRUE)
rwa_long_did.2 <- rwa_long_did.2 %>%
mutate(
popdens_over60 = case_when(
popdens >= percentile_60 ~ 1,
popdens < percentile_60 ~ 0
)
)
rwa_long_did.2<- rwa_long_did.2%>%
mutate(connect = factor(connect)) %>%   # Convert 'connect' to a factor
mutate(connect = relevel(connect, ref = "not connected"))  # Relevel 'connect'
#Regressions----
##under popdens median, using ntl----
did_under_ntl <- rwa_long_did.2 %>%
filter(popdens_over60== 0)
model_under_ntl <-lm(value ~ connect + year_2021*connect, data = did_under_ntl)
summary(model_under_ntl)
model_under_ntl_fe <- feols(value ~ connect + year_2021*connect|district, clust = "district", data = did_under_ntl)
summary(model_under_ntl_fe)
under_ntl_list <- list(`no fixed effect` = model_under_ntl, `district fixed effects` = model_under_ntl_fe)
modelsummary(
under_ntl_list,
output = "huxtable",
title = "Table: Under median population density, ntl as outcome",
stars = TRUE,
note = "Using usage and nighttime light (NTL) of 2010 and 2021",
# out = file.path(output_path, "did_ntl.html")
)
##over and equal popdens median, using ntl----
did_over_ntl <- rwa_long_did.2 %>%
filter(popdens_over60 == 1)
model_over_ntl <-lm(value ~ connect + year_2021*connect, data = did_over_ntl)
summary(model_over_ntl)
model_over_ntl_fe <-feols(value ~ connect + year_2021*connect | district, clust = "district", data = did_over_ntl)
summary(model_over_ntl_fe)
over_ntl_list <- list(`no fixed effect` = model_over_ntl, `district fixed effects` = model_over_ntl_fe)
modelsummary(
over_ntl_list,
output = "huxtable",
title = "Table: Over median population density, ntl as outcome",
stars = TRUE,
note = "Using usage and nighttime light (NTL) of 2010 and 2021",
# out = file.path(output_path, "did_ntl.html")
)
##under popdens median, using usage----
did_under_usage <- rwa_long_did.2 %>%
filter(popdens_over60 == 0)
table(did_under_usage$connect)
model_under_usage <-lm(usage ~ connect + year_2021*connect, data = did_under_usage)
summary(model_under_usage)
model_under_usage_fe <- feols(usage ~ connect + year_2021*connect|district, cluster = "district", data = did_under_usage)
summary(model_under_usage_fe)
under_usage_list <- list(`no fixed effect` = model_under_usage, `district fixed effects` = model_under_usage_fe)
modelsummary(
under_usage_list,
output = "huxtable",
title = "Table: Under median population density, usage as outcome",
stars = TRUE,
note = "Using usage and nighttime light (NTL) of 2010 and 2021",
# out = file.path(output_path, "did_ntl.html")
)
##over and equal popdens median, using usage----
did_over_usage <- rwa_long_did.2 %>%
filter(popdens_over60 == 1)
table(did_over_usage$connect)
model_over_usage <-lm(usage ~ connect + year_2021*connect, data = did_over_usage)
summary(model_over_usage)
model_over_usage_fe <- feols(usage ~ connect + year_2021*connect|district, cluster = "district", data = did_over_usage)
summary(model_over_usage_fe)
over_usage_list <- list(`no fixed effect` = model_over_usage, `district fixed effects` = model_over_usage_fe)
modelsummary(
over_usage_list,
output = "huxtable",
title = "Table: Over median population density, usage as outcome",
stars = TRUE,
note = "Using usage and nighttime light (NTL) of 2010 and 2021",
# out = file.path(output_path, "did_ntl.html")
)
model_list <- list(
`Under 60th \n population density \n nightlight as outcome ` = model_under_ntl,
`Over 60th \n population density \n nightlight as outcome ` = model_over_ntl,
`Under 60th \n population density \n usage as outcome ` = model_under_usage,
`Over 60th \n population density \n usage as outcome ` = model_over_usage
)
model_list_fe <- list(
`Under 60th \n population density \n nightlight as outcome ` = model_under_ntl_fe,
`Over 60th \n population density \n nightlight as outcome ` = model_over_ntl_fe,
`Under 60th \n population density \n usage as outcome ` = model_under_usage_fe,
`Over 60th \n population density \n usage as outcome ` = model_over_usage_fe
)
modelsummary(
model_list,
output = "huxtable",
title = "Table: Diff in diff grouped by population density",
stars = TRUE,
note = "Using usage and nighttime light of 2010 and 2021",
# out = file.path(output_path, "did_ntl.html")
)
modelsummary(
model_list_fe,
output = "huxtable",
title = "Table: Diff in diff grouped by population density(with district FE)",
stars = TRUE,
note = "Using usage and nighttime light of 2010 and 2021",
# out = file.path(output_path, "did_ntl.html")
)
graph <- rwa_long_did_usage %>%
filter(!is.na(year_first))
sum(is.na(rwa_long_did_usage$year_first))
sum(is.na(graph$usage))
graph <- graph %>%
filter(usage > 0 ) %>%
mutate(usage_mwh = usage/1000,
popdens_km2 = popdens * 1000000)  %>%
filter(popdens_km2 >10)
ggplot(graph, aes(x = popdens_km2, y = usage_mwh)) +
geom_point() +  # Add points
geom_smooth(method = "loess", se = FALSE) +  # Add smooth curve
scale_x_log10(labels = scales::label_number_si()) +  # Log scale for x-axis with SI unit labels
scale_y_log10(labels = scales::label_number_si()) +  # Log scale for y-axis with SI unit labels
labs(title = "Relationship between Usage and Population Density",
x = "Population Density (popdens/km^2)",
y = "Usage (mWh/year)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 30),  # Increase size of x-axis labels
axis.text.y = element_text(size = 30),  # Increase size of y-axis labels
axis.title = element_text(size = 30),  # Increase size of axis titles
plot.title = element_text(size = 30))
View(rwa_long_did_usage)
View(pop_dens)
pop_dens_join <- st_read(dsn = file.path(historical_data_path, "villages_old", "villages_boundaries.shp"))
pop_dens <- pop_dens_join %>%
mutate(Village_ID = as.character(Code_vill_)) %>%
select(-Code_vill_)
pop_dens <- pop_dens %>%  st_make_valid()
pop_dens$area <- st_area(pop_dens)
pop_dens <- pop_dens %>%
mutate(area = as.numeric(area),
popdens = Population/area)
pop_dens <- pop_dens %>%
select(popdens, Village_ID) %>%
clean_names() %>%
st_drop_geometry
View(pop_dens)
View(pop_dens_join)
#Check cut off----
#Log of usage on log of popdens, add geom smooth
pop_join <- pop_dens_join %>%
select(Code_vill, Population)
#Check cut off----
#Log of usage on log of popdens, add geom smooth
pop_join <- pop_dens_join %>%
select(Code_vill_, Population)
rwa_did_usage <- left_join(rwa_did_usage, pop_join, by = c("village_id" = "Code_vill_"))
rwa_long_did_usage <- left_join(rwa_long_did_usage, pop_join, by = c("village_id" = "Code_vill_"))
#Check cut off----
#Log of usage on log of popdens, add geom smooth
pop_join <- pop_dens_join %>%
select(Code_vill_, Population) %>%
mutate(Code_vill_ = as.character(Code_vill_))
rwa_long_did_usage <- left_join(rwa_long_did_usage, pop_join, by = c("village_id" = "Code_vill_"))
graph <- rwa_long_did_usage %>%
filter(!is.na(year_first))
sum(is.na(rwa_long_did_usage$year_first))
sum(is.na(graph$usage))
graph <- graph %>%
filter(usage > 0 ) %>%
mutate(usage_kwh = usage/Population,
popdens_km2 = popdens * 1000000)  %>%
filter(popdens_km2 >10)
# Plot with logarithmic scales and custom labels
ggplot(graph, aes(x = popdens_km2, y = usage_kwh)) +
geom_point() +  # Add points
geom_smooth(method = "loess", se = FALSE, size = 3) +  # Add smooth curve
scale_x_log10(labels = scales::label_number_si()) +  # Log scale for x-axis with SI unit labels
scale_y_log10(labels = scales::label_number_si()) +  # Log scale for y-axis with SI unit labels
labs(title = "Relationship between Usage and Population Density",
x = "Population Density (popdens/km^2)",
y = "Usage (kWh/capita/year)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 30),  # Increase size of x-axis labels
axis.text.y = element_text(size = 45),  # Increase size of y-axis labels
axis.title = element_text(size = 45),  # Increase size of axis titles
plot.title = element_text(size = 45))
# Plot with logarithmic scales and custom labels
ggplot(graph, aes(x = popdens_km2, y = usage_kwh)) +
geom_point() +  # Add points
geom_smooth(method = "loess", se = FALSE, size = 3) +  # Add smooth curve
scale_x_log10(labels = scales::label_number_si()) +  # Log scale for x-axis with SI unit labels
scale_y_log10(labels = scales::label_number_si()) +  # Log scale for y-axis with SI unit labels
labs(title = "Relationship between Usage and Population Density",
x = "Population Density (popdens/km^2)",
y = "Usage (kWh/capita/year)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 30),  # Increase size of x-axis labels
axis.text.y = element_text(size = 45),  # Increase size of y-axis labels
axis.title = element_text(size = 45),  # Increase size of axis titles
plot.title = element_text(size = 30))
# Plot with logarithmic scales and custom labels
ggplot(graph, aes(x = popdens_km2, y = usage_kwh)) +
geom_point() +  # Add points
geom_smooth(method = "loess", se = FALSE, size = 3) +  # Add smooth curve
scale_x_log10(labels = scales::label_number_si()) +  # Log scale for x-axis with SI unit labels
scale_y_log10(labels = scales::label_number_si()) +  # Log scale for y-axis with SI unit labels
labs(title = "Relationship between Usage and Population Density",
x = "Population Density (popdens/km^2)",
y = "Usage (kWh/capita/year)") +
theme(axis.text.x = element_text(angle = 40, hjust = 1, size = 30),  # Increase size of x-axis labels
axis.text.y = element_text(size = 40),  # Increase size of y-axis labels
axis.title = element_text(size = 40),  # Increase size of axis titles
plot.title = element_text(size = 30))
# Plot with logarithmic scales and custom labels
ggplot(graph, aes(x = popdens_km2, y = usage_kwh)) +
geom_point() +  # Add points
geom_smooth(method = "loess", se = FALSE, size = 3) +  # Add smooth curve
scale_x_log10(labels = scales::label_number_si()) +  # Log scale for x-axis with SI unit labels
scale_y_log10(labels = scales::label_number_si()) +  # Log scale for y-axis with SI unit labels
labs(title = "Relationship between Usage and Population Density",
x = "Population Density (popdens/km^2)",
y = "Usage (kWh/capita/year)") +
theme(axis.text.x = element_text(angle = 40, hjust = 1, size = 30),  # Increase size of x-axis labels
axis.text.y = element_text(size = 40),  # Increase size of y-axis labels
axis.title = element_text(size = 30),  # Increase size of axis titles
plot.title = element_text(size = 30))
