library(tidyverse)
library(dplyr)
library(here)
library(sf)
library(ggplot2)
library(readxl)
library("writexl")
library(knitr)


getwd()

####Read Shapefile####

rwa_villages <- st_read(dsn = here("rwa_villages", "Village.shp"))

karongi_villages <- rwa_villages %>% 
  filter(District == "Karongi")
karongi_villages <- karongi_villages %>% st_make_valid()


####Graph for Florence meeting####
base_karongi <- ggplot() +
  geom_sf(data = karongi_villages, color = "grey")

base_karongi


scope <- read_xlsx(here("Four District Villages(info&priority&existing&surveyed)_08210223.xlsx"))

karongi_scope <- scope %>% 
  filter(District == "Karongi")

karongi_scope <- karongi_scope %>% 
  mutate(status = ifelse(Unelectrified == 1, "unelectrified",
                         ifelse(Electrified == 1, "electrified",
                                ifelse(newly_elec == 1, "newly_elec",
                                       ifelse(newly_already == 1, "newly_already", NA)))))

karongi_status <- karongi_scope %>% 
  select(Village_ID, status)

karongi_villages <- left_join(karongi_villages, karongi_status, by = c("Village_ID"))

karongi_LV <- st_read(dsn = here("Karongi", "Surveyed_LV_Karongi.shp"))
karongi_LV <- st_transform(karongi_LV, crs = st_crs(rwa_villages))



lv_color <- "green"

non_elec_scope<- "#F8766D"
partially <- "lightblue"
electrified <- "#fad1cd"
unelectrified <- "white"



karongi_plot <- ggplot() +
  geom_sf(data = karongi_villages, aes(fill = status), linewidth = 0.2, col = "black") +
  scale_fill_manual(values = c(
    "electrified" = electrified,
    "unelectrified" = unelectrified,
    "newly_elec" = newly_elec,
    "newly_already" = newly_already
  )) +
  geom_sf(data = karongi_LV, linewidth = 0.2,  aes(color = "LV")) +
  scale_color_manual(
    values = c(LV = lv_color, `electrified` = electrified,
               `unelectrified` = unelectrified,
               `newly_elec` = newly_elec,
               `newly_already` = newly_already,
    guide = guide_legend(title.position = "top")
  ) ) + labs(title = "Karongi Village Elctrification Status")
  

  
karongi_plot


####Graph as Deliverable####

########Read Shapefile######

rwa_district <- st_read(dsn = here("rwa_district", "District.shp"))
district_base <- ggplot() +
  geom_sf(data = rwa_district)

district_base

rwa_villages <- rwa_villages %>% st_make_valid()

village_base <- ggplot()+
  geom_sf(data = rwa_villages)

village_base

Existing_HV_2022 <- st_read(dsn = here("Existing Electrical Network_2022", "Existing_HVLine.shp"))
existing_HV <- st_transform(Existing_HV_2022, crs = st_crs(rwa_villages))

existing_MV <- st_read(dsn = here("Existing Electrical Network_2022", "Existing_MVLine.shp"))
existing_MV <- st_transform(existing_MV, crs = st_crs(rwa_villages))

existing_transformer <- st_read(dsn = here("Existing Electrical Network_2022", "Existing_Transformer.shp"))
existing_transformer <- st_transform(existing_transformer, crs = st_crs(rwa_villages))

existing_substation <- st_read(dsn = here("Existing Electrical Network_2022", "Substation.shp"))
existing_substation <- st_transform(existing_substation, crs = st_crs(rwa_villages))


####Draw graph of Rwanda####
hv_color <- "#F8766D"
  # blue 
mv_color <- "#619CFF"
  # green "#00BA38"
transformer <- "#00BA38"
substations <- "orange"
scope_districts <- "lightblue"
non_scope <- "white"
rwa_district <- rwa_district %>% 
  mutate(scope = ifelse(District %in% c("Karongi", "Rusizi", "Rutsiro", "Rulindo") ,"scope", "not scope"))

rwa_scope <- ggplot() +
  geom_sf(data = rwa_district, linewidth = 0.4, col = "grey", aes(fill = scope)) +
  scale_fill_manual(values = c(
    "scope" = scope_districts,
     "not scope" = non_scope
  )) +
  labs(title = "Experiement Scope")

rwa_scope

#Rwanda 2022----

rwa_plot <- ggplot()+ 
  # geom_sf(data = rwa_villages, linewidth = 0.2, col = "grey", fill = NA) +
  geom_sf(data = rwa_district, linewidth = 0.4, col = "black", fill = NA) +
  # scale_fill_manual(values = c(
  #   "scope" = scope_districts,
  #    "not scope" = non_scope
  # )) +   
  geom_sf(data = existing_HV, linewidth = 0.5,  aes(color = "HV")) +
  geom_sf(data = existing_MV, linewidth = 0.5, aes(color = "MV")) +
  # geom_sf(data = existing_substation, size = 0.5, aes(color = "Substation"))+
  # geom_sf(data = existing_transformer, size = 0.3, aes(color = "Transformers"))+
  scale_color_manual(
    values = c(`HV` = hv_color, `MV` = mv_color, `Transformers` = transformer,
               `Substation` = substations),
    guide = guide_legend(title.position = "top")
  ) +
  theme_void() + 
  theme(plot.background = element_rect(colour = "white"))+
  labs(title = "Rwanda 2022 Grid Networks")


rwa_plot


####Data for 2011####

existing_HV_2011 <- st_read(dsn = here("Existing Electrical Network_2011", "Existing_HVLine.shp"))
existing_HV_2011 <- st_transform(existing_HV_2011, crs = st_crs(rwa_villages))

existing_MV_2011 <- st_read(dsn = here("Existing Electrical Network_2011", "Existing_MVLine.shp"))
existing_MV_2011 <- st_transform(existing_MV_2011, crs = st_crs(rwa_villages))


#Rwanda 2011----
rwa_plot_2011 <- ggplot()+ 
  # geom_sf(data = rwa_villages, linewidth = 0.2, col = "grey", fill = NA) +
  geom_sf(data = rwa_district, linewidth = 0.4, col = "black", fill = NA) +
  # scale_fill_manual(values = c(
  #   "scope" = scope_districts,
  #   "not scope" = non_scope
  # )) +   
  geom_sf(data = existing_HV_2011, linewidth = 0.5,  aes(color = "HV")) +
  geom_sf(data = existing_MV_2011, linewidth = 0.5, aes(color = "MV")) +
  # geom_sf(data = existing_substation, size = 0.5, aes(color = "Substation"))+
  # geom_sf(data = existing_transformer, size = 0.3, aes(color = "Transformers"))+
  scale_color_manual(
    values = c(`HV` = hv_color, `MV` = mv_color, `Transformers` = transformer,
               `Substation` = substations),
    guide = guide_legend(title.position = "top")
  ) +
  theme_void() + 
  theme(plot.background = element_rect(colour = "white"))+
  labs(title = "Rwanda 2011 Grid Networks")


rwa_plot_2011



# Population density map----

village_old <- st_read(dsn = here("villages_old", "villages_boundaries.shp"))

village_old <- village_old %>% 
  mutate(Village_ID = as.character(Code_vill_)) %>% 
  select(-Code_vill_)

village_old <- village_old %>%  st_make_valid()

village_old$area <- st_area(village_old)

village_old <- village_old %>% 
  mutate(area = as.numeric(area),
         popdens = Population/area)

sum(village_old$Population, na.rm = TRUE)

village_old <- village_old %>% 
  mutate(dens_winz = ifelse(popdens > 0.0009718, 0.0009718, popdens) )


gg <- ggplot() +
  geom_sf(data = village_old, mapping = aes(fill = dens_winz), color = NA) +
  scale_fill_gradient(low = "white", high = "black") +
  theme_void() + 
  theme(plot.background = element_rect(fill = 'white', color = 'white') )
  theme(legend.position = "none")
  

village_old <- village_old %>% 
  select(Village_ID, Population, popdens, dens_winz) %>% 
  distinct(Village_ID, .keep_all = TRUE) 

village_old <- village_old %>% 
  st_drop_geometry() 





#Join-----

villages <- left_join(rwa_villages, village_old, by = c("Village_ID"))

sum(is.na(villages$PopDens))

villages <- villages %>% 
  mutate(Population = ifelse(is.na(Population), 0, Population),
         popdens = ifelse(is.na(popdens), 0, popdens),
         dens_winz = ifelse(is.na(dens_winz), 0, dens_winz)
         )



# Create the plot----



base_popdens <- ggplot() +
  geom_sf(data = villages, mapping = aes(fill = dens_winz), color = NA) +
  scale_fill_gradient(low = "white", high = "black") +
  theme_void() + 
  theme(plot.background = element_rect(fill = 'white', color = 'white') ) +
  theme(legend.position = "right")

base_popdens

`2011-color` <- "orange"
`2022-color` <- "blue"

overlay <- base_popdens +
  geom_sf(data = existing_HV, linewidth = 0.5,  aes(color = "2022")) +
  geom_sf(data = existing_MV, linewidth = 0.5, aes(color = "2022")) + 
  geom_sf(data = existing_HV_2011, linewidth = 0.5,  aes(color = "2011")) +
  geom_sf(data = existing_MV_2011, linewidth = 0.5, aes(color = "2011")) +
  scale_color_manual( 
    values = c(`2011` =`2011-color`, `2022`= `2022-color`),
    guide = guide_legend(title.position = "top")
  ) +
  theme_void() + 
  theme(plot.background = element_rect(fill = 'white', color = 'white') ) +
  labs(title = "Rwanda 2011-2022 Grid Networks & Population Density")

overlay

hv_color1 <- "red"
mv_color1 <- "blue"


#Read national boundary----

rwa_boundary <- st_read(dsn = here("rwa_boundary", "RWA_adm0.shp"))

rwa_boundary <- st_transform(rwa_boundary, crs = st_crs(rwa_villages))

#2011 graph
grid_popdens_2011 <- base_popdens +
  geom_sf(data = rwa_boundary, fill = NA, color = "black", linewidth = 0.25) +  
  geom_sf(data = existing_HV_2011, linewidth = 0.25,  color = "red") +
  geom_sf(data = existing_MV_2011, linewidth = 0.25, color = "red") + 
  # scale_color_manual( 
  #   values = c(`HV` =`hv_color1`, `MV`= `mv_color1`),
  #   guide = guide_legend(title.position = "top")
  # ) +
  theme_void() + 
  theme(plot.background = element_rect(fill = 'white', color = 'white') ) +
  theme(legend.position = "none")
  # labs(title = "Rwanda 2011 Grid Networks & Population Density")

grid_popdens_2011


#2022 graph

grid_popdens_2022 <- base_popdens +
  geom_sf(data = rwa_boundary, fill = NA, color = "black", linewidth = 0.25) +  
  geom_sf(data = existing_HV, linewidth = 0.25,  color = "red") +
  geom_sf(data = existing_MV, linewidth = 0.25, color = "red") + 
  # scale_color_manual( 
  #   values = c(`HV` =`hv_color1`, `MV`= `mv_color1`),
  #   guide = guide_legend(title.position = "top")
  # ) +
  theme_void() + 
  theme(plot.background = element_rect(fill = 'white', color = 'white') ) +
  theme(legend.position = "none") 

grid_popdens_2022


#Read NEP ---


nep <- read_xlsx(here("FINAL_LIST_OF_REVISED_NEP_VILLAGES_JULY_2023-PUBLISHED (3).xlsx"), sheet = "Sheet1")

nep <- nep %>% 
  mutate(Village_ID = as.character(Code_vil_1)) %>% 
  rename(nep = `NEP Revision July 2023`) %>% 
  select(Village_ID, nep) 

villages <- left_join(villages, nep, by = c("Village_ID"))

villages <- villages %>% 
  mutate(status = case_when(
    nep %in%c("Fill In", "ge", "GE", "GE_Temporarly SAS") ~ "Grid",
    nep %in% c("SAS" , "SAS 2023", "Microgrid") ~ "Off-grid",
    TRUE ~ NA
  ))



#graph----

villages_nep <- villages %>% 
  filter(!is.na(status))

sum(is.na(villages_nep$status))

###v1
nep_plot <- ggplot() +
  geom_sf(data = villages_nep, mapping = aes(fill = status), color = NA) +
  theme_void() + 
  labs(fill = "NEP") +
  theme(plot.background = element_rect(fill = 'white', color = 'white')) +
  theme(legend.position = "top", legend.direction = "horizontal")

nep_plot

####v2
nep_plot <- ggplot() +
  geom_sf(data = villages_nep, mapping = aes(fill = NEP), color = NA) +
  theme_void() +
  labs(fill = "NEP") +
  theme(
    plot.background = element_rect(fill = 'white', color = 'white'),
    legend.position = "top",
    legend.direction = "horizontal",
  )


nep_plot


##V3
villages_nep <- villages_nep %>% 
  rename(NEP = status)

nep_plot <- ggplot() +
  geom_sf(data = villages_nep, mapping = aes(fill = NEP), color = NA) +
  geom_sf(data = rwa_boundary, fill = NA, color = "black", linewidth = 0.25) +  
  theme_void() +
  # guides(fill = guide_legend(title.position = "top", title.hjust=0.5) )+ #stacks on the legend
  theme(
    plot.background = element_rect(fill = 'white', color = 'white'),
    legend.position = "top",
    legend.direction = "horizontal",
  )

nep_plot
